<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit   revision="0.9.5" language="C++" filename="12430661.cpp"><comment type="line">//Language: GNU C++11</comment>


<include>#<directive>include</directive> <file>&lt;bits/stdc++.h&gt;</file></include>

<define>#<directive>define</directive> <macro><name>maxn</name></macro> <value>100005</value></define>
<define>#<directive>define</directive> <macro><name>maxc</name></macro> <value>1000006</value></define>
<define>#<directive>define</directive> <macro><name>reset</name><parameter_list>(<parameter><type><name>a</name></type></parameter>)</parameter_list></macro> <value>memset(a,0,sizeof(a))</value></define>
<define>#<directive>define</directive> <macro><name>pb</name></macro> <value>push_back</value></define>
<define>#<directive>define</directive> <macro><name>mp</name></macro> <value>make_pair</value></define>
<define>#<directive>define</directive> <macro><name>fi</name></macro> <value>freopen("a.inp","r",stdin)</value></define>
<define>#<directive>define</directive> <macro><name>fo</name></macro> <value>freopen("a.out","w",stdout)</value></define>

<using>using <namespace>namespace <name>std</name>;</namespace></using>

<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name><name>dd</name><index>[<expr><name>maxc</name></expr>]</index></name></decl>,<decl><type ref="prev"/><name>dem</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>maxx</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
    <expr_stmt><expr><call><name><name>ios_base</name><operator>::</operator><name>sync_with_stdio</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>reset</name><argument_list>(<argument><expr><name>dd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
    <block>{
        <decl_stmt><decl><type><name>char</name></type> <name>t</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>x</name></decl>;</decl_stmt>
        <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>t</name> <operator>&gt;&gt;</operator> <name>x</name></expr>;</expr_stmt>
        <if>if<condition>(<expr><name>t</name> <operator>==</operator> <literal type="char">'-'</literal> <operator>&amp;&amp;</operator> <operator>!</operator><name><name>dd</name><index>[<expr><name>x</name></expr>]</index></name></expr>)</condition><then>
        <block>{
            <expr_stmt><expr><name>maxx</name><operator>++</operator></expr>;</expr_stmt>
            <continue>continue;</continue>
        }</block></then></if>
        <if>if<condition>(<expr><name>t</name> <operator>==</operator> <literal type="char">'-'</literal> <operator>&amp;&amp;</operator> <name><name>dd</name><index>[<expr><name>x</name></expr>]</index></name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>dem</name><operator>--</operator></expr>;</expr_stmt></block></then></if>
        <if>if<condition>(<expr><name>t</name> <operator>==</operator> <literal type="char">'+'</literal></expr>)</condition><then>
        <block>{
            <expr_stmt><expr><name>dem</name><operator>++</operator></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>dd</name><index>[<expr><name>x</name></expr>]</index></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
        }</block></then></if>
        <expr_stmt><expr><name>maxx</name> <operator>=</operator> <call><name>max</name><argument_list>(<argument><expr><name>dem</name></expr></argument>,<argument><expr><name>maxx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></for>
    <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>maxx</name></expr>;</expr_stmt>
}</block></function>
</unit>
