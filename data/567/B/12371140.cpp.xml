<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit   revision="0.9.5" language="C++" filename="12371140.cpp"><comment type="line">//Language: GNU C++</comment>


<include>#<directive>include</directive><file>&lt;iostream&gt;</file></include>
<include>#<directive>include</directive><file>&lt;map&gt;</file></include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<function><name>main</name><parameter_list>()</parameter_list>
<block>{
    <decl_stmt><decl><type><name><name>map</name><argument_list type="generic">&lt;<argument><expr><name>long</name> <name>long</name></expr></argument> , <argument><expr><name>int</name></expr></argument>&gt;</argument_list></name></type><name>m</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><name>long</name> <name>long</name></type>  <name>n</name></decl>,<decl><type ref="prev"/><name>b</name></decl>,<decl><type ref="prev"/><name>d</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>bosh</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>ban</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
   <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>char</name></type> <name>a</name></decl>;</decl_stmt>
   <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>a</name><operator>&gt;&gt;</operator><name>b</name></expr>;</expr_stmt>
   <if>if<condition>(<expr><name>a</name><operator>==</operator><literal type="char">'+'</literal></expr>)</condition><then><block>{
          <if>if<condition>(<expr><name>bosh</name></expr>)</condition><then>
          <block>{
            <expr_stmt><expr><name>bosh</name><operator>--</operator></expr>;</expr_stmt>
          }</block></then>
       <else>else
            <block type="pseudo"><expr_stmt><expr><name>ban</name><operator>++</operator></expr>;</expr_stmt></block></else></if>
           <expr_stmt><expr><name><name>m</name><index>[<expr><name>b</name></expr>]</index></name><operator>++</operator></expr>;</expr_stmt>
   }</block></then>
   <else>else<block>{
    <if>if<condition>(<expr><operator>!</operator><name><name>m</name><index>[<expr><name>b</name></expr>]</index></name></expr>)</condition><then>
       <block>{
           <expr_stmt><expr><name>ban</name><operator>++</operator></expr>;</expr_stmt>
          <expr_stmt><expr><name>bosh</name><operator>++</operator></expr>;</expr_stmt>
       }</block></then>
     <else>else
       <block>{
       <expr_stmt><expr><name><name>m</name><index>[<expr><name>b</name></expr>]</index></name><operator>--</operator></expr>;</expr_stmt>
       <expr_stmt><expr><name>bosh</name><operator>++</operator></expr>;</expr_stmt>
           }</block></else></if>
   }</block></else></if>
  <expr_stmt><expr><name>d</name><operator>=</operator><call><name>max</name><argument_list>(<argument><expr><name>ban</name></expr></argument>,<argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></for>
   <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>d</name></expr>;</expr_stmt>
}</block></function>
</unit>
