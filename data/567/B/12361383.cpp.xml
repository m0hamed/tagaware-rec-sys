<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit   revision="0.9.5" language="C++" filename="12361383.cpp"><comment type="line">//Language: GNU C++</comment>


<include>#<directive>include</directive><file>&lt;bits/stdc++.h&gt;</file></include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>

<define>#<directive>define</directive> <macro><name>PB</name></macro> <value>push_back</value></define>
<define>#<directive>define</directive> <macro><name>MP</name></macro> <value>make_pair</value></define>
<define>#<directive>define</directive> <macro><name>F</name></macro> <value>first</value></define>
<define>#<directive>define</directive> <macro><name>S</name></macro> <value>second</value></define>
<define>#<directive>define</directive> <macro><name>LL</name></macro> <value>long long</value></define>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>MOD</name> <init>= <expr><literal type="number">1e9</literal> <operator>+</operator> <literal type="number">7</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>INF</name> <init>= <expr><name>INT_MAX</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name><name>hash</name><index>[<expr><literal type="number">103</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name><name>hash2</name><index>[<expr><literal type="number">1123456</literal></expr>]</index></name></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{	
	<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>char</name></type> <name>c</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>reg</name></decl>,<decl><type ref="prev"/><name><name>in</name><index>[<expr><literal type="number">103</literal></expr>]</index></name></decl>;</decl_stmt>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
	<block>{
		<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>c</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>reg</name></expr>;</expr_stmt>
		<if>if<condition>(<expr><name>c</name> <operator>==</operator> <literal type="char">'+'</literal></expr>)</condition><then>
			<block type="pseudo"><expr_stmt><expr><name><name>in</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>reg</name></expr>;</expr_stmt></block></then>
		<else>else
			<block type="pseudo"><expr_stmt><expr><name><name>in</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal><operator>*</operator><name>reg</name></expr>;</expr_stmt></block></else></if>
	}</block></for>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
	<block>{
		<if>if<condition>(<expr><name><name>hash2</name><index>[<expr><call><name>abs</name><argument_list>(<argument><expr><name><name>in</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>]</index></name> <operator>==</operator> <literal type="number">1</literal> <operator>&amp;&amp;</operator> <name><name>in</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><then>
				<block type="pseudo"><continue>continue;</continue></block></then></if>				
		<expr_stmt><expr><name><name>hash2</name><index>[<expr><call><name>abs</name><argument_list>(<argument><expr><name><name>in</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>]</index></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
		<if>if<condition>(<expr><name><name>in</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><then>
		<block>{
			<decl_stmt><decl><type><name>int</name></type> <name>j</name> <init>= <expr><name>i</name></expr></init></decl>;</decl_stmt>
			<while>while<condition>( <expr><name>j</name> <operator>&lt;</operator> <name>n</name> <operator>&amp;&amp;</operator> <name><name>in</name><index>[<expr><name>j</name></expr>]</index></name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal><operator>*</operator><name><name>in</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition>
			<block>{
				<expr_stmt><expr><name><name>hash</name><index>[<expr><name>j</name></expr>]</index></name><operator>++</operator></expr>;</expr_stmt>
				<expr_stmt><expr><name>j</name><operator>++</operator></expr>;</expr_stmt>
			}</block></while>
		}</block></then></if>
		<if>if<condition>(<expr><name><name>in</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><then>
		<block>{
			<decl_stmt><decl><type><name>int</name></type> <name>j</name> <init>= <expr><name>i</name></expr></init></decl>;</decl_stmt>
			<while>while<condition>(<expr><name>j</name> <operator>&gt;=</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>in</name><index>[<expr><name>j</name></expr>]</index></name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal><operator>*</operator><name><name>in</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition>
			<block>{
				<expr_stmt><expr><name><name>hash</name><index>[<expr><name>j</name></expr>]</index></name><operator>++</operator></expr>;</expr_stmt>
				<expr_stmt><expr><name>j</name><operator>--</operator></expr>;</expr_stmt>
			}</block></while>
		}</block></then></if>
	}</block></for>
	<decl_stmt><decl><type><name>int</name></type> <name>ma</name> <init>= <expr><operator>-</operator><literal type="number">1</literal><operator>*</operator><name>INF</name></expr></init></decl>;</decl_stmt>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
		<block type="pseudo"><expr_stmt><expr><name>ma</name> <operator>=</operator> <call><name>max</name><argument_list>(<argument><expr><name>ma</name></expr></argument>,<argument><expr><name><name>hash</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></for>
	<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>ma</name> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>

	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
