<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit   revision="0.9.5" language="C++" filename="12366710.cpp"><comment type="line">//Language: GNU C++</comment>


<include>#<directive>include</directive> <file>&lt;iostream&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;cstdio&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;algorithm&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;cstring&gt;</file></include>


<using>using <namespace>namespace <name>std</name>;</namespace></using>
<define>#<directive>define</directive> <macro><name>ll</name></macro> <value>long long</value></define> 

<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ll</name></type>  <name><name>a</name><index>[<expr><literal type="number">1111111</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ll</name></type>  <name><name>ta</name><index>[<expr><literal type="number">1111111</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name>A</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ll</name></type> <name>seat</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ll</name></type> <name>maxseat</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ll</name></type> <name>val</name></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name> <parameter_list>()</parameter_list>
<block>{
	<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>a</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>ta</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>ta</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>seat</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name>maxseat</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
	<block>{
	
		<expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%s%d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>A</name></expr></argument>,<argument><expr><operator>&amp;</operator><name>val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if>if <condition>(<expr><name>A</name><operator>==</operator><literal type="char">'+'</literal></expr>)</condition><then>
		<block>{
		
			<if>if<condition>( <expr><name>seat</name><operator>==</operator><name>maxseat</name></expr>)</condition><then>
			<block>{
				<expr_stmt><expr><name>maxseat</name><operator>++</operator></expr>;</expr_stmt>
			}</block></then></if>
			<expr_stmt><expr><name>seat</name><operator>++</operator></expr>;</expr_stmt>
			<expr_stmt><expr><name><name>a</name><index>[<expr><name>val</name></expr>]</index></name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
			<expr_stmt><expr><name><name>ta</name><index>[<expr><name>val</name></expr>]</index></name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
			

			
		}</block></then><else>else
		<block>{
			
			<if>if<condition>(<expr><name><name>a</name><index>[<expr><name>val</name></expr>]</index></name><operator>==</operator><literal type="number">1</literal></expr>)</condition><then>
			<block>{
			<expr_stmt><expr><name>seat</name><operator>--</operator></expr>;</expr_stmt>
			}</block></then></if>
			<expr_stmt><expr><name><name>a</name><index>[<expr><name>val</name></expr>]</index></name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
			<if>if<condition>(<expr><name><name>ta</name><index>[<expr><name>val</name></expr>]</index></name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then>
			<block>{
				<expr_stmt><expr><name>maxseat</name><operator>++</operator></expr>;</expr_stmt>
				<expr_stmt><expr><name><name>ta</name><index>[<expr><name>val</name></expr>]</index></name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
			}</block></then></if>
		}</block></else></if>
			
	}</block></for>
	<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>maxseat</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>

	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
