<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit   revision="0.9.5" language="C++" filename="12376720.cpp"><comment type="line">//Language: GNU C++11</comment>


<include>#<directive>include</directive> <file>&lt;bits/stdc++.h&gt;</file></include>

<define>#<directive>define</directive> <macro><name>maxn</name></macro> <value>200010</value></define>
<define>#<directive>define</directive> <macro><name>fi</name></macro> <value>first</value></define>
<define>#<directive>define</directive> <macro><name>se</name></macro> <value>second</value></define>

<using>using <namespace>namespace <name>std</name>;</namespace></using>

<typedef>typedef <type><name>long</name> <name>long</name> <name>int</name></type> <name>lint</name>;</typedef>

<typedef>typedef <type><name><name>pair</name> <argument_list type="generic">&lt; <argument><expr><name>lint</name></expr></argument> , <argument><expr><name>lint</name></expr></argument> &gt;</argument_list></name></type> <name>i2</name>;</typedef>

<typedef>typedef <type><name><name>pair</name> <argument_list type="generic">&lt; <argument><expr><name>i2</name></expr></argument> , <argument><expr><name>int</name></expr></argument> &gt;</argument_list></name></type> <name>i3</name>;</typedef>

<typedef>typedef <type><name><name>pair</name> <argument_list type="generic">&lt; <argument><expr><name>i2</name></expr></argument> , <argument><expr><name>i2</name></expr></argument> &gt;</argument_list></name></type> <name>i4</name>;</typedef>

<decl_stmt><decl><type><name>lint</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name><name>ar</name><index>[<expr><name>maxn</name></expr>]</index></name></decl>,<decl><type ref="prev"/><name>k</name></decl>,<decl><type ref="prev"/><name>x</name></decl>,<decl><type ref="prev"/><name><name>er</name><index>[<expr><name>maxn</name></expr>]</index></name></decl>,<decl><type ref="prev"/><name><name>asd</name><index>[<expr><name>maxn</name></expr>]</index></name></decl>,<decl><type ref="prev"/><name><name>used</name><index>[<expr><name>maxn</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>map</name><argument_list type="generic">&lt;<argument><expr><name>i2</name></expr></argument>,<argument><expr><name>lint</name></expr></argument>&gt;</argument_list></name></type> <name>mp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lint</name></type> <name>m</name></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
	<expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%lld %lld"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>n</name></expr></argument>,<argument><expr><operator>&amp;</operator><name>k</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
	<for>for<control>(<init><decl><type><name>lint</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
		<block type="pseudo"><expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%lld"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name><name>ar</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></for>
	
	<for>for<control>(<init><decl><type><name>lint</name></type> <name>i</name><init>=<expr><name>n</name></expr></init></decl>;</init><condition><expr><name>i</name><operator>&gt;=</operator><literal type="number">1</literal></expr>;</condition><incr><expr><name>i</name><operator>--</operator></expr></incr>)</control>
	<block>{
		<expr_stmt><expr><name><name>mp</name><index>[<expr><call><name>i2</name><argument_list>(<argument><expr><name><name>ar</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>]</index></name><operator>+=</operator><name><name>mp</name><index>[<expr><call><name>i2</name><argument_list>(<argument><expr><name><name>ar</name><index>[<expr><name>i</name></expr>]</index></name><operator>*</operator><name>k</name></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>mp</name><index>[<expr><call><name>i2</name><argument_list>(<argument><expr><name><name>ar</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>]</index></name><operator>+=</operator><name><name>mp</name><index>[<expr><call><name>i2</name><argument_list>(<argument><expr><name><name>ar</name><index>[<expr><name>i</name></expr>]</index></name><operator>*</operator><name>k</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>mp</name><index>[<expr><call><name>i2</name><argument_list>(<argument><expr><name><name>ar</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>]</index></name><operator>++</operator></expr>;</expr_stmt>
	}</block></for>
	
	<for>for<control>(<init><decl><type><name>lint</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
	<block>{
		<expr_stmt><expr><name>m</name><operator>+=</operator><name><name>mp</name><index>[<expr><call><name>i2</name><argument_list>(<argument><expr><name><name>ar</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>
		
		<expr_stmt><expr><name><name>mp</name><index>[<expr><call><name>i2</name><argument_list>(<argument><expr><name><name>ar</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>]</index></name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
	}</block></for>
	
	<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%lld\n"</literal></expr></argument>,<argument><expr><name>m</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
