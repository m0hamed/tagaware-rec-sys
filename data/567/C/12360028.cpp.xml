<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit   revision="0.9.5" language="C++" filename="12360028.cpp"><comment type="line">//Language: GNU C++11</comment>


<include>#<directive>include</directive> <file>&lt;vector&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;list&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;map&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;set&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;queue&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;deque&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;stack&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;bitset&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;algorithm&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;functional&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;numeric&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;limits&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;tuple&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;utility&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;sstream&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;iostream&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;iomanip&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;cstdio&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;cmath&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;cstdlib&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;ctime&gt;</file></include>

<using>using <namespace>namespace <name>std</name>;</namespace></using>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><name>long</name> <name>long</name> <name>int</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>k</name></decl>,<decl><type ref="prev"/><name>tp</name></decl>,<decl><type ref="prev"/><name>k2</name></decl>,<decl><type ref="prev"/><name>ans</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>map</name><argument_list type="generic">&lt;<argument><expr><name>long</name> <name>long</name> <name>int</name></expr></argument>, <argument><expr><name>long</name> <name>long</name> <name>int</name></expr></argument>&gt;</argument_list></name></type> <name>mp</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>map</name><argument_list type="generic">&lt;<argument><expr><name>long</name> <name>long</name> <name>int</name></expr></argument>, <argument><expr><name>long</name> <name>long</name> <name>int</name></expr></argument>&gt;</argument_list></name></type> <name>mp2</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name><operator>&gt;&gt;</operator><name>k</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>k2</name><operator>=</operator><name>k</name><operator>*</operator><name>k</name></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{
        <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>tp</name></expr>;</expr_stmt>
        <if>if <condition>(<expr><name>k</name><operator>&gt;</operator><literal type="number">1</literal></expr>)</condition><then> <block>{
            <if>if <condition>(<expr><name>tp</name><operator>%</operator><name>k2</name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then> <block>{
                <expr_stmt><expr><name>ans</name><operator>+=</operator><name><name>mp2</name><index>[<expr><name>tp</name><operator>/</operator><name>k</name></expr>]</index></name></expr>;</expr_stmt>
            }</block></then></if>
            <if>if <condition>(<expr><name>tp</name><operator>%</operator><name>k</name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then> <block>{
                <expr_stmt><expr><name><name>mp2</name><index>[<expr><name>tp</name></expr>]</index></name><operator>+=</operator><name><name>mp</name><index>[<expr><name>tp</name><operator>/</operator><name>k</name></expr>]</index></name></expr>;</expr_stmt>
            }</block></then></if>
        }</block></then>
        <else>else <block>{
            <expr_stmt><expr><name>ans</name><operator>+=</operator><operator>(</operator><name><name>mp</name><index>[<expr><name>tp</name></expr>]</index></name><operator>*</operator><operator>(</operator><name><name>mp</name><index>[<expr><name>tp</name></expr>]</index></name><operator>-</operator><literal type="number">1</literal><operator>)</operator><operator>)</operator><operator>/</operator><literal type="number">2</literal></expr>;</expr_stmt>
        }</block></else></if>
        <expr_stmt><expr><name><name>mp</name><index>[<expr><name>tp</name></expr>]</index></name><operator>++</operator></expr>;</expr_stmt>
    }</block></for>
    <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>ans</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
}</block></function></unit>
