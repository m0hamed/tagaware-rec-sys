<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit   revision="0.9.5" language="C++" filename="12447877.cpp"><comment type="line">//Language: GNU C++</comment>


<include>#<directive>include</directive> <file>&lt;cstdio&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;algorithm&gt;</file></include>

<define>#<directive>define</directive> <macro><name>MAXN</name></macro> <value>15000000</value></define>

<using>using <namespace>namespace <name>std</name>;</namespace></using>

<typedef>typedef <type><name>long</name> <name>long</name></type> <name>ll</name>;</typedef>

<decl_stmt><decl><type><name>int</name></type> <name><name>P</name><index>[ <expr><name>MAXN</name> <operator>+</operator> <literal type="number">1</literal></expr> ]</index></name></decl>, <decl><type ref="prev"/><name><name>nprimes</name><index>[ <expr><name>MAXN</name> <operator>+</operator> <literal type="number">1</literal></expr> ]</index></name></decl>, <decl><type ref="prev"/><name><name>pal</name><index>[ <expr><name>MAXN</name> <operator>+</operator> <literal type="number">1</literal></expr> ]</index></name></decl>;</decl_stmt>

<function><type><name>bool</name></type> <name>ispal</name><parameter_list>( <parameter><decl><type><name>int</name></type> <name>i</name></decl></parameter> )</parameter_list> <block>{
  <decl_stmt><decl><type><name>int</name></type> <name><name>A</name><index>[ <expr><literal type="number">10</literal></expr> ]</index></name></decl>, <decl><type ref="prev"/><name>len</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
  <while>while<condition>( <expr><name>i</name> <operator>&gt;</operator> <literal type="number">0</literal></expr> )</condition> <block>{
    <expr_stmt><expr><name><name>A</name><index>[ <expr><name>len</name><operator>++</operator></expr> ]</index></name> <operator>=</operator> <name>i</name> <operator>%</operator> <literal type="number">10</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name>i</name> <operator>/=</operator> <literal type="number">10</literal></expr>;</expr_stmt>
  }</block></while>
  <for>for<control>(  <init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>len</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control> <block>{
    <if>if<condition>( <expr><name><name>A</name><index>[ <expr><name>i</name></expr> ]</index></name> <operator>!=</operator> <name><name>A</name><index>[ <expr><name>len</name> <operator>-</operator> <name>i</name> <operator>-</operator> <literal type="number">1</literal></expr> ]</index></name></expr> )</condition><then> <block type="pseudo"><return>return <expr><literal type="number">0</literal></expr>;</return></block></then></if>
  }</block></for>
  <return>return <expr><literal type="number">1</literal></expr>;</return>
}</block></function>

<function><type><name>int</name></type> <name>main</name><parameter_list>( <parameter><decl><type><name>void</name></type></decl></parameter> )</parameter_list> <block>{
  <for>for<control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>MAXN</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control> <block>{
    <for>for<control>( <init><decl><type><name>int</name></type> <name>j</name> <init>= <expr><literal type="number">2</literal><operator>*</operator><name>i</name></expr></init></decl>;</init> <condition><expr><name>j</name> <operator>&lt;=</operator> <name>MAXN</name></expr>;</condition> <incr><expr><name>j</name> <operator>+=</operator> <name>i</name></expr></incr> )</control> <block>{
      <expr_stmt><expr><name><name>nprimes</name><index>[ <expr><name>j</name></expr> ]</index></name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
    }</block></for>
  }</block></for>
  <expr_stmt><expr><name><name>nprimes</name><index>[ <expr><literal type="number">1</literal></expr> ]</index></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
  <for>for<control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>MAXN</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control> <block>{
    <expr_stmt><expr><name><name>pal</name><index>[ <expr><name>i</name></expr> ]</index></name> <operator>=</operator> <name><name>pal</name><index>[ <expr><name>i</name> <operator>-</operator> <literal type="number">1</literal></expr> ]</index></name> <operator>+</operator> <call><name>ispal</name><argument_list>( <argument><expr><name>i</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>P</name><index>[ <expr><name>i</name></expr> ]</index></name> <operator>=</operator> <name><name>P</name><index>[ <expr><name>i</name> <operator>-</operator> <literal type="number">1</literal></expr> ]</index></name> <operator>+</operator> <literal type="number">1</literal> <operator>-</operator> <name><name>nprimes</name><index>[ <expr><name>i</name></expr> ]</index></name></expr>;</expr_stmt>
  }</block></for>
  <decl_stmt><decl><type><name>int</name></type> <name>p</name></decl>, <decl><type ref="prev"/><name>q</name></decl>, <decl><type ref="prev"/><name>ans</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d%d"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>p</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>q</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
  <for>for<control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>MAXN</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control> <block>{
    <if>if<condition>( <expr><operator>(</operator> <name>ll</name> <operator>)</operator><name>q</name> <operator>*</operator> <operator>(</operator> <name>ll</name> <operator>)</operator><name><name>P</name><index>[ <expr><name>i</name></expr> ]</index></name> <operator>&lt;=</operator> <operator>(</operator> <name>ll</name> <operator>)</operator><name>p</name> <operator>*</operator> <operator>(</operator> <name>ll</name> <operator>)</operator><name><name>pal</name><index>[ <expr><name>i</name></expr> ]</index></name></expr> )</condition><then> <block type="pseudo"><expr_stmt><expr><name>ans</name> <operator>=</operator> <name>i</name></expr>;</expr_stmt></block></then></if>
  }</block></for>
  <if>if<condition>( <expr><name>ans</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr> )</condition><then> <block type="pseudo"><expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"Palindromic tree is better than splay tree\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></then>
  <else>else <block type="pseudo"><expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%d\n"</literal></expr></argument>, <argument><expr><name>ans</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block></else></if>
  <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
