<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit   revision="0.9.5" language="C++" filename="12461165.cpp"><comment type="line">//Language: GNU C++11</comment>



<include>#<directive>include</directive> <file>&lt;bits/stdc++.h&gt;</file></include>
<define>#<directive>define</directive> <macro><name>lli</name></macro> <value>long long int</value></define>
<using>using <namespace>namespace <name>std</name>;</namespace></using>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
	<decl_stmt><decl><type><name>double</name></type> <name>T</name></decl>,<decl><type ref="prev"/><name>S</name></decl>,<decl><type ref="prev"/><name>q</name></decl>;</decl_stmt>
	
	<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>T</name><operator>&gt;&gt;</operator><name>S</name><operator>&gt;&gt;</operator><name>q</name></expr>;</expr_stmt>
	
	<decl_stmt><decl><type><name>int</name></type> <name>ans</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	<while>while <condition>(<expr><name>S</name><operator>&lt;</operator><name>T</name></expr>)</condition>
	<block>{
		<expr_stmt><expr><name>ans</name><operator>++</operator></expr>;</expr_stmt>
		<decl_stmt><decl><type><name>double</name></type> <name>t</name> <init>= <expr><name>q</name> <operator>*</operator> <name>S</name></expr></init></decl>;</decl_stmt>			<comment type="line">// Vt + x0 = V't + x0'</comment>
		<decl_stmt><decl><type><name>double</name></type> <name>s</name> <init>= <expr><name>t</name> <operator>*</operator> <operator>(</operator><name>q</name><operator>-</operator><literal type="number">1</literal><operator>)</operator><operator>/</operator><name>q</name></expr></init></decl>;</decl_stmt>		<comment type="line">// x = Vt</comment>
		<expr_stmt><expr><name>S</name> <operator>+=</operator> <name>s</name></expr>;</expr_stmt>
	}</block></while>
	
	<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>ans</name></expr>;</expr_stmt>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
