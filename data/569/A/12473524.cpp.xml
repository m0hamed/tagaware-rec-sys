<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit   revision="0.9.5" language="C++" filename="12473524.cpp"><comment type="line">//Language: GNU C++</comment>


<include>#<directive>include</directive><file>&lt;cmath&gt;</file></include>
<include>#<directive>include</directive><file>&lt;math.h&gt;</file></include>
<include>#<directive>include</directive><file>&lt;ctype.h&gt;</file></include>
<include>#<directive>include</directive><file>&lt;algorithm&gt;</file></include>
<include>#<directive>include</directive><file>&lt;bitset&gt;</file></include>
<include>#<directive>include</directive><file>&lt;cassert&gt;</file></include>
<include>#<directive>include</directive><file>&lt;cctype&gt;</file></include>
<include>#<directive>include</directive><file>&lt;cerrno&gt;</file></include>
<include>#<directive>include</directive><file>&lt;cfloat&gt;</file></include>
<include>#<directive>include</directive><file>&lt;ciso646&gt;</file></include>
<include>#<directive>include</directive><file>&lt;climits&gt;</file></include>
<include>#<directive>include</directive><file>&lt;clocale&gt;</file></include>
<include>#<directive>include</directive><file>&lt;complex&gt;</file></include>
<include>#<directive>include</directive><file>&lt;csetjmp&gt;</file></include>
<include>#<directive>include</directive><file>&lt;csignal&gt;</file></include>
<include>#<directive>include</directive><file>&lt;cstdarg&gt;</file></include>
<include>#<directive>include</directive><file>&lt;cstddef&gt;</file></include>
<include>#<directive>include</directive><file>&lt;cstdio&gt;</file></include>
<include>#<directive>include</directive><file>&lt;cstdlib&gt;</file></include>
<include>#<directive>include</directive><file>&lt;cstring&gt;</file></include>
<include>#<directive>include</directive><file>&lt;ctime&gt;</file></include>
<include>#<directive>include</directive><file>&lt;cwchar&gt;</file></include>
<include>#<directive>include</directive><file>&lt;cwctype&gt;</file></include>
<include>#<directive>include</directive><file>&lt;deque&gt;</file></include>
<include>#<directive>include</directive><file>&lt;exception&gt;</file></include>
<include>#<directive>include</directive><file>&lt;fstream&gt;</file></include>
<include>#<directive>include</directive><file>&lt;functional&gt;</file></include>
<include>#<directive>include</directive><file>&lt;iomanip&gt;</file></include>
<include>#<directive>include</directive><file>&lt;ios&gt;</file></include>
<include>#<directive>include</directive><file>&lt;iosfwd&gt;</file></include>
<include>#<directive>include</directive><file>&lt;iostream&gt;</file></include>
<include>#<directive>include</directive><file>&lt;istream&gt;</file></include>
<include>#<directive>include</directive><file>&lt;iterator&gt;</file></include>
<include>#<directive>include</directive><file>&lt;limits&gt;</file></include>
<include>#<directive>include</directive><file>&lt;list&gt;</file></include>
<include>#<directive>include</directive><file>&lt;locale&gt;</file></include>
<include>#<directive>include</directive><file>&lt;map&gt;</file></include>
<include>#<directive>include</directive><file>&lt;memory&gt;</file></include>
<include>#<directive>include</directive><file>&lt;new&gt;</file></include>
<include>#<directive>include</directive><file>&lt;numeric&gt;</file></include>
<include>#<directive>include</directive><file>&lt;ostream&gt;</file></include>
<include>#<directive>include</directive><file>&lt;queue&gt;</file></include>
<include>#<directive>include</directive><file>&lt;set&gt;</file></include>
<include>#<directive>include</directive><file>&lt;sstream&gt;</file></include>
<include>#<directive>include</directive><file>&lt;stack&gt;</file></include>
<include>#<directive>include</directive><file>&lt;stdexcept&gt;</file></include>
<include>#<directive>include</directive><file>&lt;streambuf&gt;</file></include>
<include>#<directive>include</directive><file>&lt;string&gt;</file></include>
<include>#<directive>include</directive><file>&lt;typeinfo&gt;</file></include>
<include>#<directive>include</directive><file>&lt;utility&gt;</file></include>
<include>#<directive>include</directive><file>&lt;valarray&gt;</file></include>
<include>#<directive>include</directive><file>&lt;vector&gt;</file></include>
<include>#<directive>include</directive><file>&lt;string.h&gt;</file></include>
<include>#<directive>include</directive><file>&lt;stdlib.h&gt;</file></include>
<include>#<directive>include</directive><file>&lt;stdio.h&gt;</file></include>
<define>#<directive>define</directive> <macro><name>ll</name></macro>   <value>long long</value></define>
<comment type="line">//ä½è:ä¸­å½æ±èåäº¬ä¸å¤©è¡</comment>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><name>int</name></type> <name>t</name></decl>,<decl><type ref="prev"/><name>s</name></decl>,<decl><type ref="prev"/><name>q</name></decl>,<decl><type ref="prev"/><name>ans</name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
    <expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d%d%d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>t</name></expr></argument>,<argument><expr><operator>&amp;</operator><name>s</name></expr></argument>,<argument><expr><operator>&amp;</operator><name>q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <while>while<condition>(<expr><name>s</name><operator>&lt;</operator><name>t</name></expr>)</condition><block>{
               <expr_stmt><expr><name>s</name><operator>*=</operator><name>q</name></expr>;</expr_stmt>
               <expr_stmt><expr><name>ans</name><operator>++</operator></expr>;</expr_stmt>
    }</block></while>
    <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%d\n"</literal></expr></argument>,<argument><expr><name>ans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<comment type="line">//system("pause");</comment>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
