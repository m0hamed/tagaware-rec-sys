<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit   revision="0.9.5" language="C++" filename="11868636.cpp"><comment type="line">//Language: GNU C++11</comment>


<include>#<directive>include</directive><file>&lt;bits/stdc++.h&gt;</file></include>
<define>#<directive>define</directive> <macro><name>pb</name></macro> <value>push_back</value></define>
<define>#<directive>define</directive> <macro><name>eb</name></macro> <value>emplace_back</value></define>
<define>#<directive>define</directive> <macro><name>mp</name></macro> <value>make_pair</value></define>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<typedef>typedef <type><name>long</name> <name>long</name></type> <name>ll</name>;</typedef>


 
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{

<decl_stmt><decl><type><name>ll</name></type> <name>mn1</name></decl>,<decl><type ref="prev"/><name>mn2</name></decl>,<decl><type ref="prev"/><name>mn3</name></decl>,<decl><type ref="prev"/><name>mx1</name></decl>,<decl><type ref="prev"/><name>mx2</name></decl>,<decl><type ref="prev"/><name>mx3</name></decl>,<decl><type ref="prev"/><name>n</name></decl>,<decl><type ref="prev"/><name>s</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>a1</name></decl>,<decl><type ref="prev"/><name>a2</name></decl>,<decl><type ref="prev"/><name>a3</name></decl>;</decl_stmt>
<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name><operator>&gt;&gt;</operator><name>mn1</name><operator>&gt;&gt;</operator><name>mx1</name><operator>&gt;&gt;</operator><name>mn2</name><operator>&gt;&gt;</operator><name>mx2</name><operator>&gt;&gt;</operator><name>mn3</name><operator>&gt;&gt;</operator><name>mx3</name></expr>;</expr_stmt>
<expr_stmt><expr><name>s</name><operator>=</operator><name>mn1</name><operator>+</operator><name>mn2</name><operator>+</operator><name>mn3</name></expr>;</expr_stmt>
<expr_stmt><expr><name>a1</name><operator>=</operator><name>mn1</name></expr>;</expr_stmt>
<expr_stmt><expr><name>a2</name><operator>=</operator><name>mn2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>a3</name><operator>=</operator><name>mn3</name></expr>;</expr_stmt>
<while>while<condition>(<expr><name>s</name><operator>&lt;</operator><name>n</name> <operator>&amp;&amp;</operator> <name>a1</name><operator>&lt;</operator><name>mx1</name></expr>)</condition><block>{
    <expr_stmt><expr><name>a1</name><operator>++</operator></expr>;</expr_stmt>
    <expr_stmt><expr><name>s</name><operator>++</operator></expr>;</expr_stmt>
}</block></while>
<while>while<condition>(<expr><name>s</name><operator>&lt;</operator><name>n</name> <operator>&amp;&amp;</operator> <name>a2</name><operator>&lt;</operator><name>mx2</name></expr>)</condition><block>{
    <expr_stmt><expr><name>a2</name><operator>++</operator></expr>;</expr_stmt>
    <expr_stmt><expr><name>s</name><operator>++</operator></expr>;</expr_stmt>
}</block></while>
<while>while<condition>(<expr><name>s</name><operator>&lt;</operator><name>n</name> <operator>&amp;&amp;</operator> <name>a3</name><operator>&lt;</operator><name>mx3</name></expr>)</condition><block>{
    <expr_stmt><expr><name>a3</name><operator>++</operator></expr>;</expr_stmt>
    <expr_stmt><expr><name>s</name><operator>++</operator></expr>;</expr_stmt>
}</block></while>
<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>a1</name><operator>&lt;&lt;</operator><literal type="string">" "</literal><operator>&lt;&lt;</operator><name>a2</name><operator>&lt;&lt;</operator><literal type="string">" "</literal><operator>&lt;&lt;</operator><name>a3</name></expr>;</expr_stmt>
 

    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function> </unit>
