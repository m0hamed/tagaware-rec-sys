<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit   revision="0.9.5" language="C++" filename="12506174.cpp"><comment type="line">//Language: GNU C++11</comment>


<include>#<directive>include</directive><file>&lt;bits/stdc++.h&gt;</file></include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
<comment type="line">//    freopen("input.txt", "r", stdin);</comment>
    <decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>, <decl><type ref="prev"/><name>m</name></decl>, <decl><type ref="prev"/><name><name>candWin</name><index>[<expr><literal type="number">105</literal></expr>]</index></name><init>=<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr></init></decl>, <decl><type ref="prev"/><name>winner</name></decl>, <decl><type ref="prev"/><name>maxV</name></decl>, <decl><type ref="prev"/><name>vote</name></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d %d"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>n</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>m</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;=</operator><name>m</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control><block>{
        <expr_stmt><expr><name>maxV</name><operator>=</operator><operator>-</operator><literal type="number">55555</literal></expr>;</expr_stmt>
        <for>for<control>(<init><decl><type><name>int</name></type> <name>j</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>j</name><operator>&lt;=</operator><name>n</name></expr>;</condition> <incr><expr><operator>++</operator><name>j</name></expr></incr>)</control><block>{
            <expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>vote</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if>if<condition>(<expr><name>vote</name> <operator>&gt;</operator> <name>maxV</name></expr>)</condition><then><block>{
                <expr_stmt><expr><name>maxV</name> <operator>=</operator> <name>vote</name></expr>;</expr_stmt> <expr_stmt><expr><name>winner</name> <operator>=</operator> <name>j</name></expr>;</expr_stmt>
            }</block></then></if>
        }</block></for>
        <expr_stmt><expr><operator>++</operator><name><name>candWin</name><index>[<expr><name>winner</name></expr>]</index></name></expr>;</expr_stmt>
    }</block></for>
    <expr_stmt><expr><name>vote</name> <operator>=</operator> <operator>-</operator><literal type="number">5555</literal></expr>;</expr_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control><block>{
        <if>if<condition>(<expr><name><name>candWin</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&gt;</operator> <name>vote</name></expr>)</condition><then><block>{
            <expr_stmt><expr><name>vote</name> <operator>=</operator> <name><name>candWin</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt> <expr_stmt><expr><name>winner</name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>
        }</block></then></if>
    }</block></for>
    <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%d\n"</literal></expr></argument>, <argument><expr><name>winner</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
