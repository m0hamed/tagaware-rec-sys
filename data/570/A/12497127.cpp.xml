<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit   revision="0.9.5" language="C++" filename="12497127.cpp"><comment type="line">//Language: GNU C++</comment>


<comment type="line" format="doxygen">/// The Budweiser ///</comment>
<include>#<directive>include</directive> <file>&lt;bits/stdc++.h&gt;</file></include>
<define>#<directive>define</directive> <macro><name>foru</name><parameter_list>(<parameter><type><name>i</name></type></parameter>,<parameter><type><name>a</name></type></parameter>,<parameter><type><name>b</name></type></parameter>)</parameter_list></macro> <value>for(int i=a;i&lt;=b;i++)</value></define>
<define>#<directive>define</directive> <macro><name>ford</name><parameter_list>(<parameter><type><name>i</name></type></parameter>,<parameter><type><name>a</name></type></parameter>,<parameter><type><name>b</name></type></parameter>)</parameter_list></macro> <value>for(int i=a;i&gt;=b;i--)</value></define>
<define>#<directive>define</directive> <macro><name>fi</name></macro> <value>first</value></define>
<define>#<directive>define</directive> <macro><name>se</name></macro> <value>second</value></define>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<typedef>typedef <type><name><name>pair</name><argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>,<argument><expr><name>int</name></expr></argument>&gt;</argument_list></name></type> <name>ii</name>;</typedef>
<typedef>typedef <type><name>long</name> <name>long</name></type> <name>ll</name>;</typedef>
<typedef>typedef <type><name><name>pair</name><argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>,<argument><expr><name>ii</name></expr></argument>&gt;</argument_list></name></type> <name>iii</name>;</typedef>
<typedef>typedef <type><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>&gt;</argument_list></name></type> <name>vi</name>;</typedef>
<typedef>typedef <type><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>ii</name></expr></argument>&gt;</argument_list></name></type> <name>vii</name>;</typedef>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>inf</name> <init>= <expr><literal type="number">1e9</literal><operator>+</operator><literal type="number">9</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>double</name></type> <name>pi</name> <init>= <expr><name>M_PI</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>double</name></type> <name>ep</name> <init>= <expr><literal type="number">1e-9</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>int</name></type> <name><name>a</name><index>[<expr><literal type="number">200</literal></expr>]</index><index>[<expr><literal type="number">200</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name><name>d</name><index>[<expr><literal type="number">200</literal></expr>]</index></name></decl>;</decl_stmt>

<function><name>main</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>ios</name><operator>::</operator><name>sync_with_stdio</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="line">//freopen("in.in","r",stdin); freopen("ou.ou","w",stdout);</comment>
    <decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>m</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name><operator>&gt;&gt;</operator><name>m</name></expr>;</expr_stmt>
    <macro><name>foru</name><argument_list>(<argument>i</argument>,<argument><literal type="number">1</literal></argument>,<argument>m</argument>)</argument_list></macro>
        <macro><name>foru</name><argument_list>(<argument>j</argument>,<argument><literal type="number">1</literal></argument>,<argument>n</argument>)</argument_list></macro>
            <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name></expr>;</expr_stmt>

    <macro><name>foru</name><argument_list>(<argument>i</argument>,<argument><literal type="number">1</literal></argument>,<argument>n</argument>)</argument_list></macro> <expr_stmt><expr><name><name>d</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
    <macro><name>foru</name><argument_list>(<argument>i</argument>,<argument><literal type="number">1</literal></argument>,<argument>m</argument>)</argument_list></macro> <block>{
        <decl_stmt><decl><type><name>int</name></type> <name>Max</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>t</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <macro><name>foru</name><argument_list>(<argument>j</argument>,<argument><literal type="number">1</literal></argument>,<argument>n</argument>)</argument_list></macro> <block>{
            <if>if <condition>(<expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name><operator>&gt;</operator><name>Max</name></expr>)</condition><then> <block>{
                <expr_stmt><expr><name>Max</name> <operator>=</operator> <name><name>a</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt><expr><name>t</name> <operator>=</operator> <name>j</name></expr>;</expr_stmt>
            }</block></then></if>
        }</block>
        <expr_stmt><expr><name><name>d</name><index>[<expr><name>t</name></expr>]</index></name><operator>++</operator></expr>;</expr_stmt>
    }</block>

    <decl_stmt><decl><type><name>int</name></type> <name>Max</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>,<decl><type ref="prev"/><name>t</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <macro><name>foru</name><argument_list>(<argument>i</argument>,<argument><literal type="number">1</literal></argument>,<argument>n</argument>)</argument_list></macro> <if>if <condition>(<expr><name><name>d</name><index>[<expr><name>i</name></expr>]</index></name><operator>&gt;</operator><name>Max</name></expr>)</condition><then> <block>{
        <expr_stmt><expr><name>Max</name> <operator>=</operator> <name><name>d</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name>t</name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>
    }</block></then></if>
    <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>t</name></expr>;</expr_stmt>

    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
