<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit   revision="0.9.5" language="C++" filename="12495643.cpp"><comment type="line">//Language: GNU C++</comment>


<include>#<directive>include</directive><file>&lt;bits/stdc++.h&gt;</file></include>
<define>#<directive>define</directive> <macro><name>ll</name></macro> <value>long long</value></define>
<define>#<directive>define</directive> <macro><name>fi</name></macro> <value>first</value></define>
<define>#<directive>define</directive> <macro><name>se</name></macro> <value>second</value></define>
<define>#<directive>define</directive> <macro><name>MOD</name></macro> <value>1000000007</value></define>
<function><type><name>ll</name></type> <name>mpow</name><parameter_list>(<parameter><decl><type><name>ll</name></type> <name>a</name></decl></parameter>, <parameter><decl><type><name>ll</name></type> <name>n</name></decl></parameter>,<parameter><decl><type><name>ll</name></type> <name>mod</name></decl></parameter>)</parameter_list>
<block>{<decl_stmt><decl><type><name>ll</name></type> <name>ret</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt><decl_stmt><decl><type><name>ll</name></type> <name>b</name><init>=<expr><name>a</name></expr></init></decl>;</decl_stmt><while>while<condition>(<expr><name>n</name></expr>)</condition> <block>{<if>if<condition>(<expr><name>n</name><operator>&amp;</operator><literal type="number">1</literal></expr>)</condition><then>
    <block type="pseudo"><expr_stmt><expr><name>ret</name><operator>=</operator><operator>(</operator><name>ret</name><operator>*</operator><name>b</name><operator>)</operator><operator>%</operator><name>mod</name></expr>;</expr_stmt></block></then></if><expr_stmt><expr><name>b</name><operator>=</operator><operator>(</operator><name>b</name><operator>*</operator><name>b</name><operator>)</operator><operator>%</operator><name>mod</name></expr>;</expr_stmt><expr_stmt><expr><name>n</name><operator>&gt;&gt;=</operator><literal type="number">1</literal></expr>;</expr_stmt>}</block></while>
<return>return <expr><operator>(</operator><name>ll</name><operator>)</operator><name>ret</name></expr>;</return>
}</block></function>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<define>#<directive>define</directive> <macro><name>irr</name></macro> <value>acos(-1.0)</value></define>
<define>#<directive>define</directive> <macro><name>mem</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>a</name></type></parameter>)</parameter_list></macro> <value>memset(x,a,sizeof(x))</value></define>
<define>#<directive>define</directive> <macro><name>pii</name></macro> <value>pair&lt;int,int&gt;</value></define>
<define>#<directive>define</directive> <macro><name>mp</name></macro> <value>make_pair</value></define>
<define>#<directive>define</directive> <macro><name>pb</name></macro> <value>push_back</value></define>
<define>#<directive>define</directive> <macro><name>N</name></macro> <value>100000+5</value></define>
<decl_stmt><decl><type><name>int</name></type> <name><name>a</name><index>[<expr><literal type="number">101</literal></expr>]</index></name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
    <decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>m</name></decl>,<decl><type ref="prev"/><name>i</name></decl>,<decl><type ref="prev"/><name>j</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name><operator>&gt;&gt;</operator><name>m</name></expr>;</expr_stmt>
    <for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">1</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>m</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
    <block>{
        <decl_stmt><decl><type><name>int</name></type> <name>max1</name><init>=<expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>,<decl><type ref="prev"/><name>ind</name></decl>;</decl_stmt>
        <for>for<control>(<init><expr><name>j</name><operator>=</operator><literal type="number">0</literal></expr>;</init><condition><expr><name>j</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>j</name><operator>++</operator></expr></incr>)</control>
        <block>{
            <decl_stmt><decl><type><name>int</name></type> <name>x</name></decl>;</decl_stmt>
            <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>x</name></expr>;</expr_stmt>
            <if>if<condition>(<expr><name>max1</name><operator>&lt;</operator><name>x</name></expr>)</condition><then>
            <block>{
                <expr_stmt><expr><name>ind</name><operator>=</operator><name>j</name><operator>+</operator><literal type="number">1</literal></expr>;</expr_stmt>
                <expr_stmt><expr><name>max1</name><operator>=</operator><name>x</name></expr>;</expr_stmt>
            }</block></then></if>
        }</block></for>
        <expr_stmt><expr><name><name>a</name><index>[<expr><name>ind</name></expr>]</index></name><operator>++</operator></expr>;</expr_stmt>
    }</block></for>
    <decl_stmt><decl><type><name>int</name></type> <name>max1</name><init>=<expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>,<decl><type ref="prev"/><name>ind</name></decl>;</decl_stmt>
    <for>for<control>(<init><expr><name>j</name><operator>=</operator><literal type="number">0</literal></expr>;</init><condition><expr><name>j</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>j</name><operator>++</operator></expr></incr>)</control>
    <block>{
        <if>if<condition>(<expr><name>max1</name><operator>&lt;</operator><name><name>a</name><index>[<expr><name>j</name></expr>]</index></name></expr>)</condition><then>
        <block>{
            <expr_stmt><expr><name>max1</name><operator>=</operator><name><name>a</name><index>[<expr><name>j</name></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt><expr><name>ind</name><operator>=</operator><name>j</name></expr>;</expr_stmt>
        }</block></then></if>
    }</block></for>
    <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>ind</name></expr>;</expr_stmt>



    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
