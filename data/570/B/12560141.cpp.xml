<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit   revision="0.9.5" language="C++" filename="12560141.cpp"><comment type="line">//Language: GNU C++</comment>


<include>#<directive>include</directive> <file>"stdio.h"</file></include>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
        <decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>m</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>ans</name></decl>;</decl_stmt>
        <while>while<condition>(<expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d%d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>n</name></expr></argument>,<argument><expr><operator>&amp;</operator><name>m</name></expr></argument>)</argument_list></call><operator>==</operator><literal type="number">2</literal></expr>)</condition>
        <block>{
                <if>if<condition>(<expr><name>n</name><operator>==</operator><literal type="number">1</literal></expr>)</condition><then>
                        <block>{
                                <expr_stmt><expr><call><name>puts</name><argument_list>(<argument><expr><literal type="string">"1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                <continue>continue;</continue>
                        }</block></then></if>
                <if>if<condition>(<expr><name>m</name><operator>-</operator><literal type="number">1</literal><operator>&gt;=</operator><name>n</name><operator>-</operator><name>m</name></expr>)</condition><then>
                        <block type="pseudo"><expr_stmt><expr><name>ans</name><operator>=</operator><name>m</name><operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt></block></then>
                <else>else
                        <block type="pseudo"><expr_stmt><expr><name>ans</name><operator>=</operator><name>m</name><operator>+</operator><literal type="number">1</literal></expr>;</expr_stmt></block></else></if>
                <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%d\n"</literal></expr></argument>,<argument><expr><name>ans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></while>
        <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
