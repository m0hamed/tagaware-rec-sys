<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit   revision="0.9.5" language="C++" filename="12509317.cpp"><comment type="line">//Language: GNU C++11</comment>


<include>#<directive>include</directive><file>&lt;iostream&gt;</file></include>
<include>#<directive>include</directive><file>&lt;math.h&gt;</file></include>
<include>#<directive>include</directive><file>&lt;algorithm&gt;</file></include>

<using>using <namespace>namespace <name>std</name>;</namespace></using>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>m</name></decl>,<decl><type ref="prev"/><name>x</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name><operator>&gt;&gt;</operator><name>m</name></expr>;</expr_stmt>
    <if>if<condition>(<expr><name>n</name><operator>-</operator><name>m</name><operator>&lt;=</operator><name>m</name><operator>-</operator><literal type="number">1</literal></expr>)</condition><then> <block>{ <expr_stmt><expr><name>x</name><operator>=</operator><name>m</name><operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt> }</block></then>
    <else>else <block>{ <expr_stmt><expr><name>x</name><operator>=</operator><name>m</name><operator>+</operator><literal type="number">1</literal></expr>;</expr_stmt> }</block></else></if>
    <if>if<condition>(<expr><name>n</name><operator>==</operator><name>m</name> <operator>&amp;&amp;</operator> <name>n</name><operator>==</operator><literal type="number">1</literal> <operator>&amp;&amp;</operator> <name>m</name><operator>==</operator><literal type="number">1</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>x</name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt></block></then></if>
    <if>if<condition>(<expr><name>m</name><operator>&gt;</operator><name>n</name></expr>)</condition><then> <block>{
        <expr_stmt><expr><name>x</name><operator>=</operator><name>n</name></expr>;</expr_stmt> }</block></then></if>
    <if>if<condition>(<expr><name>m</name><operator>&lt;</operator><literal type="number">1</literal></expr>)</condition><then> <block>{ <expr_stmt><expr><name>x</name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt> }</block></then></if>
    <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>x</name></expr>;</expr_stmt>
}</block></function>
</unit>
