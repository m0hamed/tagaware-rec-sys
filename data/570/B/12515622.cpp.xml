<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit   revision="0.9.5" language="C++" filename="12515622.cpp"><comment type="line">//Language: GNU C++</comment>


<include>#<directive>include</directive><file>&lt;bits/stdc++.h&gt;</file></include>

<define>#<directive>define</directive> <macro><name>lld</name></macro> <value>long long int</value></define>

<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><name>lld</name></type> <name>n</name></decl>, <decl><type ref="prev"/><name>m</name></decl>, <decl><type ref="prev"/><name>c</name></decl>, <decl><type ref="prev"/><name>l</name></decl>, <decl><type ref="prev"/><name>r</name></decl>, <decl><type ref="prev"/><name>a</name></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{

  <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name><operator>&gt;&gt;</operator><name>m</name></expr>;</expr_stmt>

  <expr_stmt><expr><name>l</name><operator>=</operator><name>m</name><operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>
  <expr_stmt><expr><name>r</name> <operator>=</operator> <name>n</name><operator>-</operator><name>m</name></expr>;</expr_stmt>
  <if>if<condition>(<expr><name>l</name><operator>&gt;=</operator><name>r</name></expr>)</condition><then>
    <block type="pseudo"><if>if<condition>(<expr><name>m</name><operator>&gt;</operator><literal type="number">1</literal></expr>)</condition><then>
        <block type="pseudo"><expr_stmt><expr><name>a</name><operator>=</operator><name>m</name><operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt></block></then>
    <else>else
        <block type="pseudo"><expr_stmt><expr><name>a</name><operator>=</operator><name>m</name></expr>;</expr_stmt></block></else></if></block></then>
  <elseif>else <if>if<condition>(<expr><name>r</name><operator>&gt;</operator><name>l</name></expr>)</condition><then>
    <block type="pseudo"><expr_stmt><expr><name>a</name><operator>=</operator><name>m</name><operator>+</operator><literal type="number">1</literal></expr>;</expr_stmt></block></then></if></elseif></if>

  <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>a</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
