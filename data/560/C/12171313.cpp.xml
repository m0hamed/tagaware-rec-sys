<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit   revision="0.9.5" language="C++" filename="12171313.cpp"><comment type="line">//Language: GNU C++</comment>


<include>#<directive>include</directive> <file>&lt;stdio.h&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;string.h&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;stdlib.h&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;math.h&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;iostream&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;string&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;algorithm&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;vector&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;queue&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;map&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;set&gt;</file></include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<typedef>typedef  <type><name>long</name> <name>long</name></type> <name>ll</name>;</typedef>
<typedef>typedef <type><name><name>pair</name><argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>,<argument><expr><name>int</name></expr></argument>&gt;</argument_list></name></type> <name>PII</name>;</typedef>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>inf</name><init>=<expr><literal type="number">0x7f7f7f7f</literal></expr></init></decl>;</decl_stmt>


<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
<ifndef>#<directive>ifndef</directive> <name>ONLINE_JUDGE</name></ifndef>
    <expr_stmt><expr><call><name>freopen</name><argument_list>(<argument><expr><literal type="string">"test.in"</literal></expr></argument>, <argument><expr><literal type="string">"r"</literal></expr></argument>, <argument><expr><name>stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<endif>#<directive>endif</directive></endif>

    <decl_stmt><decl><type><name>int</name></type> <name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <literal type="number">6</literal></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>
    <block>{
    	<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
    }</block></for>

    <decl_stmt><decl><type><name>ll</name></type> <name>ans</name><init>=<expr><name><name>a</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>-</operator><name><name>a</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>b</name><init>=<expr><name><name>a</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <while>while<condition>(<expr><name><name>a</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>||</operator> <name><name>a</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>||</operator> <name><name>a</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>||</operator> <name><name>a</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr>)</condition><block>{
	    <while>while<condition>(<expr><name><name>a</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>&amp;&amp;</operator> <name><name>a</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>)</condition><block>{
	    	<expr_stmt><expr><name>b</name><operator>++</operator></expr>;</expr_stmt>
	    	<expr_stmt><expr><name>ans</name><operator>+=</operator><name>b</name><operator>*</operator><literal type="number">2</literal></expr>;</expr_stmt>
	    	<expr_stmt><expr><name><name>a</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>--</operator></expr>;</expr_stmt>
	    	<expr_stmt><expr><name><name>a</name><index>[<expr><literal type="number">3</literal></expr>]</index></name><operator>--</operator></expr>;</expr_stmt>
	    }</block></while>

	    <while>while<condition>(<expr><name><name>a</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>&amp;&amp;</operator> <name><name>a</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr>)</condition><block>{
	    	<expr_stmt><expr><name>b</name></expr>;</expr_stmt>
	    	<expr_stmt><expr><name>ans</name><operator>+=</operator><name>b</name><operator>*</operator><literal type="number">2</literal></expr>;</expr_stmt>
	    	<expr_stmt><expr><name><name>a</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>--</operator></expr>;</expr_stmt>
	    	<expr_stmt><expr><name><name>a</name><index>[<expr><literal type="number">4</literal></expr>]</index></name><operator>--</operator></expr>;</expr_stmt>
	    }</block></while>

	    <while>while<condition>(<expr><name><name>a</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>&amp;&amp;</operator> <name><name>a</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>)</condition><block>{
	    	<expr_stmt><expr><name>b</name></expr>;</expr_stmt>
	    	<expr_stmt><expr><name>ans</name><operator>+=</operator><name>b</name><operator>*</operator><literal type="number">2</literal></expr>;</expr_stmt>
	    	<expr_stmt><expr><name><name>a</name><index>[<expr><literal type="number">6</literal></expr>]</index></name><operator>--</operator></expr>;</expr_stmt>
	    	<expr_stmt><expr><name><name>a</name><index>[<expr><literal type="number">3</literal></expr>]</index></name><operator>--</operator></expr>;</expr_stmt>
	    }</block></while>

	    <while>while<condition>(<expr><name><name>a</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>&amp;&amp;</operator> <name><name>a</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr>)</condition><block>{
	    	<expr_stmt><expr><name>b</name><operator>--</operator></expr>;</expr_stmt>
	    	<expr_stmt><expr><name>ans</name><operator>+=</operator><name>b</name><operator>*</operator><literal type="number">2</literal></expr>;</expr_stmt>
	    	<expr_stmt><expr><name><name>a</name><index>[<expr><literal type="number">6</literal></expr>]</index></name><operator>--</operator></expr>;</expr_stmt>
	    	<expr_stmt><expr><name><name>a</name><index>[<expr><literal type="number">4</literal></expr>]</index></name><operator>--</operator></expr>;</expr_stmt>
	    }</block></while>
	}</block></while>

    <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>ans</name> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>

    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
