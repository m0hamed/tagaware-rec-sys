<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit   revision="0.9.5" language="C++" filename="12182610.cpp"><comment type="line">//Language: GNU C++11</comment>


<include>#<directive>include</directive><file>&lt;stdio.h&gt;</file></include>
<include>#<directive>include</directive><file>&lt;iostream&gt;</file></include>
<include>#<directive>include</directive><file>&lt;algorithm&gt;</file></include>
<include>#<directive>include</directive><file>&lt;math.h&gt;</file></include>

<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><name>int</name></type> <name><name>num</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></decl>;</decl_stmt>
<function><type><name>bool</name></type> <name>allsame</name><parameter_list>()</parameter_list>
<block>{
    <decl_stmt><decl><type><name>int</name></type> <name>temp</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>temp</name> <operator>=</operator> <name><name>num</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">6</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
    <block>{
        <if>if <condition>(<expr><name>temp</name> <operator>!=</operator> <name><name>num</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition><then> <block type="pseudo"><return>return <expr><literal type="boolean">false</literal></expr>;</return></block></then></if>
    }</block></for>
    <return>return <expr><literal type="boolean">true</literal></expr>;</return>
}</block></function>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
    <decl_stmt><decl><type><name>int</name></type> <name>sum</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>hi</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>now</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>flag</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt> <comment type="line">//0 ì´ë©´ ë¤í¨ê» ì¦ê° 1ì´ë©´ ì¼ìª½ ì¦ê° 2ë©´ ì¤ë¥¸ìª½ ì¦ê° 3ì´ë©´ ë¤ ê°ì</comment>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">6</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
    <block>{
        <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name><name>num</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
        
    }</block></for>
    <expr_stmt><expr><name>hi</name> <operator>=</operator> <name><name>num</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>+</operator> <name><name>num</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name>now</name> <operator>=</operator> <name><name>num</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>*</operator><literal type="number">2</literal> <operator>+</operator><literal type="number">1</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name>sum</name> <operator>+=</operator> <name>now</name></expr>;</expr_stmt>
    <if>if <condition>(<expr><name><name>num</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>==</operator> <name><name>num</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr>)</condition><then>
    <block>{
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>num</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
        <block>{
            <expr_stmt><expr><name>now</name> <operator>+=</operator> <literal type="number">2</literal></expr> ;</expr_stmt>
            <expr_stmt><expr><name>sum</name> <operator>+=</operator> <name>now</name></expr>  ;</expr_stmt>
        }</block></for>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><name><name>num</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator><name>hi</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
        <block>{
            <expr_stmt><expr><name>sum</name> <operator>+=</operator> <name>now</name> <operator>-</operator> <literal type="number">2</literal> <operator>*</operator> <operator>(</operator><name>i</name> <operator>-</operator> <name><name>num</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>
        }</block></for>
    }</block></then></if>
    <if>if <condition>(<expr><name><name>num</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>&gt;</operator> <name><name>num</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr>)</condition><then>
    <block>{
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>num</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
        <block>{
            <expr_stmt><expr><name>now</name> <operator>+=</operator> <literal type="number">2</literal></expr>;</expr_stmt>
            <expr_stmt><expr><name>sum</name> <operator>+=</operator> <name>now</name></expr>;</expr_stmt>
        }</block></for>
        <expr_stmt><expr><name>now</name> <operator>+=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name>sum</name> <operator>+=</operator> <name>now</name></expr>;</expr_stmt>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><name><name>num</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>+</operator> <literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator><name><name>num</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
        <block>{

            <expr_stmt><expr><name>sum</name> <operator>+=</operator> <name>now</name></expr>;</expr_stmt>
        }</block></for>
        <expr_stmt><expr><name>now</name> <operator>-=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name>sum</name> <operator>+=</operator> <name>now</name></expr>;</expr_stmt>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><name><name>num</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>+</operator> <literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator><name>hi</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
        <block>{
            <expr_stmt><expr><name>sum</name> <operator>+=</operator> <name>now</name> <operator>-</operator> <literal type="number">2</literal> <operator>*</operator> <operator>(</operator><name>i</name> <operator>-</operator> <name><name>num</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>
        }</block></for>
    }</block></then></if>
    <if>if <condition>(<expr><name><name>num</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>&lt;</operator> <name><name>num</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr>)</condition><then>
    <block>{
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>num</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
        <block>{
            <expr_stmt><expr><name>now</name> <operator>+=</operator> <literal type="number">2</literal></expr> ;</expr_stmt>
            <expr_stmt><expr><name>sum</name> <operator>+=</operator> <name>now</name></expr>;</expr_stmt>
        }</block></for>
        <expr_stmt><expr><name>now</name> <operator>+=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name>sum</name> <operator>+=</operator> <name>now</name></expr>;</expr_stmt>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><name><name>num</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>+</operator> <literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator><name><name>num</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
        <block>{   
            
            <expr_stmt><expr><name>sum</name> <operator>+=</operator> <name>now</name></expr>;</expr_stmt>
        }</block></for>
        <expr_stmt><expr><name>now</name> <operator>-=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name>sum</name> <operator>+=</operator> <name>now</name></expr>;</expr_stmt>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><name><name>num</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>+</operator> <literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator><name>hi</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
        <block>{
            <expr_stmt><expr><name>sum</name> <operator>+=</operator> <name>now</name> <operator>-</operator> <literal type="number">2</literal> <operator>*</operator> <operator>(</operator><name>i</name> <operator>-</operator> <name><name>num</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>)</operator></expr>;</expr_stmt>
        }</block></for>
    }</block></then></if>
    <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>sum</name> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
