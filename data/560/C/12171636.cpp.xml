<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit   revision="0.9.5" language="C++" filename="12171636.cpp"><comment type="line">//Language: GNU C++</comment>


<include>#<directive>include</directive> <file>&lt;iostream&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;stdio.h&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;stdlib.h&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;math.h&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;algorithm&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;string.h&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;string&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;queue&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;vector&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;time.h&gt;</file></include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><name>int</name></type> <name><name>a</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>;</decl_stmt>
<function><specifier>inline</specifier> <type><name>void</name></type> <name>solve</name><parameter_list>()</parameter_list><block>{
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><literal type="number">6</literal></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></for>
    <decl_stmt><decl><type><name>int</name></type> <name>total</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>noww</name><init>=<expr><name><name>a</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></init></decl>,<decl><type ref="prev"/><name>last</name><init>=<expr><name><name>a</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></init></decl>,<decl><type ref="prev"/><name>aa</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>bb</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name><name>a</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>+</operator><name><name>a</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{
        <if>if<condition>(<expr><name>i</name><operator>&gt;</operator><name><name>a</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>aa</name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt></block></then></if>
        <if>if<condition>(<expr><name>i</name><operator>&gt;</operator><name><name>a</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>bb</name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt></block></then></if>
        <if>if<condition>(<expr><name>aa</name><operator>==</operator><literal type="number">0</literal><operator>&amp;&amp;</operator><name>bb</name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>noww</name><operator>++</operator></expr>;</expr_stmt></block></then>
        <elseif>else <if>if<condition>(<expr><name>aa</name><operator>==</operator><literal type="number">1</literal><operator>&amp;&amp;</operator><name>bb</name><operator>==</operator><literal type="number">1</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>noww</name><operator>--</operator></expr>;</expr_stmt></block></then></if></elseif></if>
        <comment type="line">//printf("%d %d\n",last,noww);</comment>
        <expr_stmt><expr><name>total</name><operator>+=</operator><operator>(</operator><name>noww</name><operator>+</operator><name>last</name><operator>)</operator></expr>;</expr_stmt>
        <expr_stmt><expr><name>last</name><operator>=</operator><name>noww</name></expr>;</expr_stmt>
    }</block></for>
    <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%d\n"</literal></expr></argument>,<argument><expr><name>total</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
    <comment type="line">//freopen("cf3132C.in","r",stdin);freopen("cf3132C.out","w",stdout);</comment>
    <expr_stmt><expr><call><name>solve</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
