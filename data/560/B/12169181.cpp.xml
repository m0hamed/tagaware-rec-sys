<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit   revision="0.9.5" language="C++" filename="12169181.cpp"><comment type="line">//Language: GNU C++11</comment>


<include>#<directive>include</directive><file>&lt;iostream&gt;</file></include>
<include>#<directive>include</directive><file>&lt;algorithm&gt;</file></include>
<include>#<directive>include</directive><file>&lt;cstdio&gt;</file></include>
<include>#<directive>include</directive><file>&lt;cstring&gt;</file></include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>i</name></decl>,<decl><type ref="prev"/><name>m</name></decl>,<decl><type ref="prev"/><name>x1</name></decl>,<decl><type ref="prev"/><name>y1</name></decl>,<decl><type ref="prev"/><name>x2</name></decl>,<decl><type ref="prev"/><name>y2</name></decl>,<decl><type ref="prev"/><name>cx</name></decl>,<decl><type ref="prev"/><name>cy</name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
    <expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d %d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>n</name></expr></argument>,<argument><expr><operator>&amp;</operator><name>m</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d %d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>x1</name></expr></argument>,<argument><expr><operator>&amp;</operator><name>y1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d %d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>x2</name></expr></argument>,<argument><expr><operator>&amp;</operator><name>y2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>cx</name><operator>=</operator><call><name>max</name><argument_list>(<argument><expr><name>x1</name></expr></argument>,<argument><expr><name>x2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>cy</name><operator>=</operator><name>y1</name><operator>+</operator><name>y2</name></expr>;</expr_stmt>
    <if>if<condition>(<expr><name>cx</name><operator>&lt;=</operator><name>n</name><operator>&amp;&amp;</operator><name>cy</name><operator>&lt;=</operator><name>m</name></expr>)</condition><then><block>{
        <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"YES"</literal></expr>;</expr_stmt>
        <return>return <expr><literal type="number">0</literal></expr>;</return>
    }</block></then></if>
    <expr_stmt><expr><name>cx</name><operator>=</operator><name>x1</name><operator>+</operator><name>x2</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>cy</name><operator>=</operator><call><name>max</name><argument_list>(<argument><expr><name>y1</name></expr></argument>,<argument><expr><name>y2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if>if<condition>(<expr><name>cx</name><operator>&lt;=</operator><name>n</name><operator>&amp;&amp;</operator><name>cy</name><operator>&lt;=</operator><name>m</name></expr>)</condition><then><block>{
        <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"YES"</literal></expr>;</expr_stmt>
        <return>return <expr><literal type="number">0</literal></expr>;</return>
    }</block></then></if>
<comment type="line">//======================</comment>
    <expr_stmt><expr><call><name>swap</name><argument_list>(<argument><expr><name>x1</name></expr></argument>,<argument><expr><name>y1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>cx</name><operator>=</operator><call><name>max</name><argument_list>(<argument><expr><name>x1</name></expr></argument>,<argument><expr><name>x2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>cy</name><operator>=</operator><name>y1</name><operator>+</operator><name>y2</name></expr>;</expr_stmt>
    <if>if<condition>(<expr><name>cx</name><operator>&lt;=</operator><name>n</name><operator>&amp;&amp;</operator><name>cy</name><operator>&lt;=</operator><name>m</name></expr>)</condition><then><block>{
        <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"YES"</literal></expr>;</expr_stmt>
        <return>return <expr><literal type="number">0</literal></expr>;</return>
    }</block></then></if>
    <expr_stmt><expr><name>cx</name><operator>=</operator><name>x1</name><operator>+</operator><name>x2</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>cy</name><operator>=</operator><call><name>max</name><argument_list>(<argument><expr><name>y1</name></expr></argument>,<argument><expr><name>y2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if>if<condition>(<expr><name>cx</name><operator>&lt;=</operator><name>n</name><operator>&amp;&amp;</operator><name>cy</name><operator>&lt;=</operator><name>m</name></expr>)</condition><then><block>{
        <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"YES"</literal></expr>;</expr_stmt>
        <return>return <expr><literal type="number">0</literal></expr>;</return>
    }</block></then></if>
<comment type="line">//======================</comment>
    <expr_stmt><expr><call><name>swap</name><argument_list>(<argument><expr><name>x1</name></expr></argument>,<argument><expr><name>y1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>swap</name><argument_list>(<argument><expr><name>x2</name></expr></argument>,<argument><expr><name>y2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>cx</name><operator>=</operator><call><name>max</name><argument_list>(<argument><expr><name>x1</name></expr></argument>,<argument><expr><name>x2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>cy</name><operator>=</operator><name>y1</name><operator>+</operator><name>y2</name></expr>;</expr_stmt>
    <if>if<condition>(<expr><name>cx</name><operator>&lt;=</operator><name>n</name><operator>&amp;&amp;</operator><name>cy</name><operator>&lt;=</operator><name>m</name></expr>)</condition><then><block>{
        <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"YES"</literal></expr>;</expr_stmt>
        <return>return <expr><literal type="number">0</literal></expr>;</return>
    }</block></then></if>
    <expr_stmt><expr><name>cx</name><operator>=</operator><name>x1</name><operator>+</operator><name>x2</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>cy</name><operator>=</operator><call><name>max</name><argument_list>(<argument><expr><name>y1</name></expr></argument>,<argument><expr><name>y2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if>if<condition>(<expr><name>cx</name><operator>&lt;=</operator><name>n</name><operator>&amp;&amp;</operator><name>cy</name><operator>&lt;=</operator><name>m</name></expr>)</condition><then><block>{
        <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"YES"</literal></expr>;</expr_stmt>
        <return>return <expr><literal type="number">0</literal></expr>;</return>
    }</block></then></if>
<comment type="line">//====================</comment>
    <expr_stmt><expr><call><name>swap</name><argument_list>(<argument><expr><name>x1</name></expr></argument>,<argument><expr><name>y1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>cx</name><operator>=</operator><call><name>max</name><argument_list>(<argument><expr><name>x1</name></expr></argument>,<argument><expr><name>x2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>cy</name><operator>=</operator><name>y1</name><operator>+</operator><name>y2</name></expr>;</expr_stmt>
    <if>if<condition>(<expr><name>cx</name><operator>&lt;=</operator><name>n</name><operator>&amp;&amp;</operator><name>cy</name><operator>&lt;=</operator><name>m</name></expr>)</condition><then><block>{
        <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"YES"</literal></expr>;</expr_stmt>
        <return>return <expr><literal type="number">0</literal></expr>;</return>
    }</block></then></if>
    <expr_stmt><expr><name>cx</name><operator>=</operator><name>x1</name><operator>+</operator><name>x2</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>cy</name><operator>=</operator><call><name>max</name><argument_list>(<argument><expr><name>y1</name></expr></argument>,<argument><expr><name>y2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if>if<condition>(<expr><name>cx</name><operator>&lt;=</operator><name>n</name><operator>&amp;&amp;</operator><name>cy</name><operator>&lt;=</operator><name>m</name></expr>)</condition><then><block>{
        <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"YES"</literal></expr>;</expr_stmt>
        <return>return <expr><literal type="number">0</literal></expr>;</return>
    }</block></then></if>
    <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"NO"</literal></expr>;</expr_stmt>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
