<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit   revision="0.9.5" language="C++" filename="12223868.cpp"><comment type="line">//Language: GNU C++11</comment>


<include>#<directive>include</directive> <file>&lt;iostream&gt;</file></include>

<using>using <namespace>namespace <name>std</name> ;</namespace></using>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>N</name> <init>= <expr><literal type="number">1e7</literal> <operator>+</operator> <literal type="number">10</literal></expr></init></decl> ;</decl_stmt>
<typedef>typedef <type><name>long</name> <name>long</name></type> <name>ll</name> ;</typedef>
<typedef>typedef <type><name><name>pair</name><argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>,<argument><expr><name>int</name></expr></argument>&gt;</argument_list></name></type> <name>pii</name>;</typedef>
<typedef>typedef <type><name>long</name> <name>double</name></type> <name>ld</name>;</typedef>

<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl> ;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>a</name></decl> , <decl><type ref="prev"/><name><name>o</name><index>[<expr><name>N</name></expr>]</index></name></decl> , <decl><type ref="prev"/><name>x</name></decl> , <decl><type ref="prev"/><name><name>f</name><index>[<expr><name>N</name></expr>]</index></name></decl> , <decl><type ref="prev"/><name><name>l</name><index>[<expr><name>N</name></expr>]</index></name></decl> ;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name><name>argv</name><index>[]</index></name></decl></parameter>)</parameter_list> <block>{
    
    <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name></expr> ;</expr_stmt>
    
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>N</name></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
    <block>{
        <expr_stmt><expr><name><name>f</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr> ;</expr_stmt> <expr_stmt><expr><name><name>l</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>n</name> <operator>+</operator> <literal type="number">1</literal></expr> ;</expr_stmt>
    }</block></for>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
    <block>{
        <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>x</name></expr> ;</expr_stmt>
        <if>if <condition>( <expr><name><name>f</name><index>[<expr><name>x</name></expr>]</index></name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><then>
            <block type="pseudo"><expr_stmt><expr><name><name>f</name><index>[<expr><name>x</name></expr>]</index></name> <operator>=</operator> <name>i</name></expr> ;</expr_stmt></block></then></if>
        <expr_stmt><expr><name><name>l</name><index>[<expr><name>x</name></expr>]</index></name> <operator>=</operator> <name>i</name></expr> ;</expr_stmt>
        
        <expr_stmt><expr><name><name>o</name><index>[<expr><name>x</name></expr>]</index></name> <operator>++</operator></expr> ;</expr_stmt>
    }</block></for>
    <decl_stmt><decl><type><name>int</name></type> <name>mm</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</decl_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>N</name></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
    <block>{
        <if>if <condition>( <expr><name><name>o</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&gt;</operator> <literal type="number">0</literal></expr> )</condition><then><block>{
            <if>if <condition>( <expr><name><name>o</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&gt;</operator> <name><name>o</name><index>[<expr><name>mm</name></expr>]</index></name></expr> )</condition><then><block>{
                <expr_stmt><expr><name>mm</name> <operator>=</operator> <name>i</name></expr> ;</expr_stmt>
            }</block></then><elseif>else <if>if <condition>( <expr><operator>(</operator><name><name>o</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <name><name>o</name><index>[<expr><name>mm</name></expr>]</index></name><operator>)</operator> <operator>&amp;&amp;</operator> <operator>(</operator><operator>(</operator><name><name>l</name><index>[<expr><name>mm</name></expr>]</index></name> <operator>-</operator> <name><name>f</name><index>[<expr><name>mm</name></expr>]</index></name><operator>)</operator> <operator>&gt;</operator> <operator>(</operator><name><name>l</name><index>[<expr><name>i</name></expr>]</index></name> <operator>-</operator> <name><name>f</name><index>[<expr><name>i</name></expr>]</index></name><operator>)</operator><operator>)</operator></expr> )</condition><then><block>{
                <expr_stmt><expr><name>mm</name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>
            }</block></then></if></elseif></if>
        }</block></then></if>
    }</block></for>
    
    <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name><name>f</name><index>[<expr><name>mm</name></expr>]</index></name><operator>+</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="string">" "</literal> <operator>&lt;&lt;</operator> <name><name>l</name><index>[<expr><name>mm</name></expr>]</index></name><operator>+</operator><literal type="number">1</literal></expr> ;</expr_stmt>
    
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
