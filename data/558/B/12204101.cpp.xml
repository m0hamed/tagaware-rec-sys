<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit   revision="0.9.5" language="C++" filename="12204101.cpp"><comment type="line">//Language: GNU C++</comment>


<include>#<directive>include</directive> <file>&lt;iostream&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;vector&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;map&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;algorithm&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;cstdio&gt;</file></include>

<using>using <namespace>namespace <name>std</name>;</namespace></using>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
  <decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt>
  <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name></expr>;</expr_stmt>
  <decl_stmt><decl><type><name><name>map</name><argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>, <argument><expr><name>int</name></expr></argument>&gt;</argument_list></name></type> <name>x_left</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name><name>map</name><argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>, <argument><expr><name>int</name></expr></argument>&gt;</argument_list></name></type> <name>x_cnt</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>int</name></type> <name>max_count</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, <decl><type ref="prev"/><name>l</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, <decl><type ref="prev"/><name>r</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
  <for>for <control>(<init><decl><type><name>int</name></type> <name>ii</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>ii</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><name>ii</name><operator>++</operator></expr></incr>)</control> <block>{
      <decl_stmt><decl><type><name>int</name></type> <name>x</name></decl>;</decl_stmt>
      <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>x</name></expr>;</expr_stmt>

      <if>if <condition>(<expr><name><name>x_left</name><index>[<expr><name>x</name></expr>]</index></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><then> <block>{
          <expr_stmt><expr><name><name>x_cnt</name><index>[<expr><name>x</name></expr>]</index></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
          <expr_stmt><expr><name><name>x_left</name><index>[<expr><name>x</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>ii</name><operator>+</operator><literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
      }</block></then> <else>else <block>{
          <expr_stmt><expr><name><name>x_cnt</name><index>[<expr><name>x</name></expr>]</index></name><operator>++</operator></expr>;</expr_stmt>
      }</block></else></if>
      <if>if <condition>(<expr><name><name>x_cnt</name><index>[<expr><name>x</name></expr>]</index></name> <operator>&gt;</operator> <name>max_count</name></expr>)</condition><then> <block>{
          <expr_stmt><expr><name>l</name> <operator>=</operator> <name><name>x_left</name><index>[<expr><name>x</name></expr>]</index></name></expr>;</expr_stmt>
          <expr_stmt><expr><name>r</name> <operator>=</operator> <operator>(</operator><name>ii</name><operator>+</operator><literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
          <expr_stmt><expr><name>max_count</name> <operator>=</operator> <name><name>x_cnt</name><index>[<expr><name>x</name></expr>]</index></name></expr>;</expr_stmt>
      }</block></then> <elseif>else <if>if <condition>(<expr><name><name>x_cnt</name><index>[<expr><name>x</name></expr>]</index></name> <operator>==</operator> <name>max_count</name> <operator>&amp;&amp;</operator> <operator>(</operator><name>r</name><operator>-</operator><name>l</name><operator>)</operator> <operator>&gt;</operator> <operator>(</operator><name>ii</name><operator>+</operator><literal type="number">1</literal><operator>-</operator><name><name>x_left</name><index>[<expr><name>x</name></expr>]</index></name><operator>)</operator></expr>)</condition><then> <block>{
          <expr_stmt><expr><name>r</name> <operator>=</operator> <operator>(</operator><name>ii</name><operator>+</operator><literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
          <expr_stmt><expr><name>l</name> <operator>=</operator> <name><name>x_left</name><index>[<expr><name>x</name></expr>]</index></name></expr>;</expr_stmt>
      }</block></then></if></elseif></if>
  }</block></for>
  <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%d %d\n"</literal></expr></argument>, <argument><expr><name>l</name></expr></argument>, <argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
