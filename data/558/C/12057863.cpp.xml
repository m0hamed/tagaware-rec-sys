<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit   revision="0.9.5" language="C++" filename="12057863.cpp"><comment type="line">//Language: GNU C++11</comment>


<include>#<directive>include</directive> <file>&lt;iostream&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;stack&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;cmath&gt;</file></include>

<using>using <namespace>namespace <name>std</name>;</namespace></using>

<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>, <decl><type ref="prev"/><name>a</name></decl>, <decl><type ref="prev"/><name>b</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>short</name></type> <name><name>s</name><index>[<expr><literal type="number">1000000</literal></expr>]</index><index>[<expr><literal type="number">21</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>short</name></type> <name><name>size</name><index>[<expr><literal type="number">1000000</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>short</name></type> <name><name>rem</name><index>[<expr><literal type="number">1000000</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>stack</name><argument_list type="generic">&lt;<argument><expr><name>short</name></expr></argument>&gt;</argument_list></name></type> <name>t</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>minsize</name> <init>= <expr><literal type="number">22</literal></expr></init></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
	<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name></expr>;</expr_stmt>
	
	<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">1000000</literal></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>
	<block>{
		<for>for <control>(<init><decl><type><name>int</name></type> <name>j</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <literal type="number">21</literal></expr>;</condition> <incr><expr><operator>++</operator><name>j</name></expr></incr>)</control>
		<block>{
			<expr_stmt><expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>
		}</block></for>
	}</block></for>
	
	<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>
	<block>{
		<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>a</name></expr>;</expr_stmt>
		
		<while>while <condition>(<expr><name>a</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition>
		<block>{
			<expr_stmt><expr><call><name><name>t</name><operator>.</operator><name>push</name></name><argument_list>(<argument><expr><name>a</name><operator>%</operator><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name>a</name><operator>/=</operator><literal type="number">2</literal></expr>;</expr_stmt>
		}</block></while>
		
		<expr_stmt><expr><name>b</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
		
		<while>while <condition>(<expr><operator>!</operator><call><name><name>t</name><operator>.</operator><name>empty</name></name><argument_list>()</argument_list></call></expr>)</condition>
		<block>{
			<expr_stmt><expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>b</name><operator>++</operator></expr>]</index></name> <operator>=</operator> <call><name><name>t</name><operator>.</operator><name>top</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name>t</name><operator>.</operator><name>pop</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		}</block></while>
		
		<expr_stmt><expr><name><name>size</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>b</name></expr>;</expr_stmt>
	
		<if>if <condition>(<expr><name>b</name> <operator>&lt;</operator> <name>minsize</name></expr>)</condition><then>
			<block type="pseudo"><expr_stmt><expr><name>minsize</name> <operator>=</operator> <name>b</name></expr>;</expr_stmt></block></then></if>
	}</block></for>
	
	<decl_stmt><decl><type><name>bool</name></type> <name>vannulla</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>bool</name></type> <name>vanegy</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
	
	<decl_stmt><decl><type><name>int</name></type> <name>u</name> <init>= <expr><name>minsize</name></expr></init></decl>;</decl_stmt>
	
	<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>minsize</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>
	<block>{
		<expr_stmt><expr><name>vanegy</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name>vannulla</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
		
		<for>for <control>(<init><decl><type><name>int</name></type> <name>j</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><operator>++</operator><name>j</name></expr></incr>)</control>
		<block>{
			<if>if <condition>(<expr><name><name>s</name><index>[<expr><name>j</name></expr>]</index><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><then>
			<block>{
				<expr_stmt><expr><name>vanegy</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
			}</block></then>
			<elseif>else <if>if <condition>(<expr><name><name>s</name><index>[<expr><name>j</name></expr>]</index><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><then>
			<block>{
				<expr_stmt><expr><name>vannulla</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
			}</block></then></if></elseif></if>
		}</block></for>
		
		<if>if <condition>(<expr><name>vanegy</name> <operator>&amp;&amp;</operator> <name>vannulla</name></expr>)</condition><then>
		<block>{
			<expr_stmt><expr><name>u</name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>
			<break>break;</break>
		}</block></then></if>
	}</block></for>
	
	<decl_stmt><decl><type><name>long</name> <name>long</name> <name>int</name></type> <name>res</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	
	<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>
	<block>{
		<expr_stmt><expr><name>vanegy</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
		
		<for>for <control>(<init><decl><type><name>int</name></type> <name>j</name> <init>= <expr><name>u</name></expr></init></decl>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <name><name>size</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</condition> <incr><expr><operator>++</operator><name>j</name></expr></incr>)</control>
		<block>{
			<if>if <condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name> <operator>==</operator> <literal type="number">1</literal> <operator>&amp;&amp;</operator> <operator>!</operator><name>vanegy</name></expr>)</condition><then>
			<block>{
				<expr_stmt><expr><name>res</name> <operator>+=</operator> <name><name>size</name><index>[<expr><name>i</name></expr>]</index></name><operator>-</operator><name>j</name></expr>;</expr_stmt>
				<expr_stmt><expr><name><name>rem</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>j</name><operator>-</operator><name>u</name></expr>;</expr_stmt>
				<expr_stmt><expr><name>vanegy</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
			}</block></then></if>
		}</block></for>
		
		<if>if <condition>(<expr><operator>!</operator><name>vanegy</name></expr>)</condition><then>
			<block type="pseudo"><expr_stmt><expr><name><name>rem</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>size</name><index>[<expr><name>i</name></expr>]</index></name><operator>-</operator><name>u</name></expr>;</expr_stmt></block></then></if>
	}</block></for>
	
	<decl_stmt><decl><type><name>long</name> <name>long</name> <name>int</name></type> <name>minsum</name> <init>= <expr><literal type="number">10000000</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>sum</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	
	<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <literal type="number">20</literal></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>
	<block>{
		<expr_stmt><expr><name>sum</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
		
		<for>for <control>(<init><decl><type><name>int</name></type> <name>j</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><operator>++</operator><name>j</name></expr></incr>)</control>
			<block type="pseudo"><expr_stmt><expr><name>sum</name> <operator>+=</operator> <call><name>abs</name><argument_list>(<argument><expr><name><name>rem</name><index>[<expr><name>j</name></expr>]</index></name><operator>-</operator><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></for>
			
		<if>if <condition>(<expr><name>sum</name> <operator>&lt;</operator> <name>minsum</name></expr>)</condition><then>
			<block type="pseudo"><expr_stmt><expr><name>minsum</name> <operator>=</operator> <name>sum</name></expr>;</expr_stmt></block></then></if>
	}</block></for>
	
	<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>res</name><operator>+</operator><name>minsum</name> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
}</block></function>

</unit>
