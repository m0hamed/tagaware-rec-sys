<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit   revision="0.9.5" language="C++" filename="12595863.cpp"><comment type="line">//Language: GNU C++</comment>


<include>#<directive>include</directive> <file>&lt;cstdio&gt;</file></include>
<define>#<directive>define</directive> <macro><name>N_Max</name></macro> <value>123456</value></define>

<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>, <decl><type ref="prev"/><name><name>cnt</name><index>[<expr><name>N_Max</name></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>sum</name><index>[<expr><name>N_Max</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>ans</name></decl>;</decl_stmt>

<function><type><name>void</name></type> <name>init</name><parameter_list>()</parameter_list> <block>{
	<expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{
		<decl_stmt><decl><type><name>int</name></type> <name>tmp</name></decl>;</decl_stmt>
		<expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name>int</name></type> <name>l</name> <init>= <expr><name>tmp</name></expr></init></decl>, <decl><type ref="prev"/><name>time</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
		<while>while <condition>(<expr><name>l</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{
			<expr_stmt><expr><name><name>cnt</name><index>[<expr><name>l</name></expr>]</index></name><operator>++</operator></expr>;</expr_stmt>
			<expr_stmt><expr><name><name>sum</name><index>[<expr><name>l</name></expr>]</index></name> <operator>+=</operator> <name>time</name></expr>;</expr_stmt>

			<if>if <condition>(<expr><name>l</name><operator>&amp;</operator><literal type="number">1</literal> <operator>&amp;&amp;</operator> <name>l</name> <operator>!=</operator> <literal type="number">1</literal></expr>)</condition><then> <block>{
				<decl_stmt><decl><type><name>int</name></type> <name>tmpl</name> <init>= <expr><operator>(</operator><name>l</name><operator>&gt;&gt;</operator><literal type="number">1</literal><operator>)</operator><operator>&lt;&lt;</operator><literal type="number">1</literal></expr></init></decl>, <decl><type ref="prev"/><name>tmpt</name> <init>= <expr><name>time</name><operator>+</operator><literal type="number">2</literal></expr></init></decl>;</decl_stmt>
				<while>while <condition>(<expr><name>tmpl</name> <operator>&lt;</operator> <name>N_Max</name></expr>)</condition> <block>{
					<expr_stmt><expr><name><name>cnt</name><index>[<expr><name>tmpl</name></expr>]</index></name><operator>++</operator></expr>;</expr_stmt>
					<expr_stmt><expr><name><name>sum</name><index>[<expr><name>tmpl</name></expr>]</index></name> <operator>+=</operator> <name>tmpt</name></expr>;</expr_stmt>

					<expr_stmt><expr><name>tmpl</name> <operator>&lt;&lt;=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
					<expr_stmt><expr><name>tmpt</name><operator>++</operator></expr>;</expr_stmt>
				}</block></while>
			}</block></then></if>

			<expr_stmt><expr><name>time</name><operator>++</operator></expr>;</expr_stmt>
			<expr_stmt><expr><name>l</name> <operator>&gt;&gt;=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
		}</block></while>

		<expr_stmt><expr><name>l</name> <operator>=</operator> <name>tmp</name></expr><operator>,</operator> <expr><name>time</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
		<while>while <condition>(<expr><name>l</name> <operator>&lt;</operator> <name>N_Max</name></expr>)</condition> <block>{
			<expr_stmt><expr><name><name>cnt</name><index>[<expr><name>l</name></expr>]</index></name><operator>++</operator></expr>;</expr_stmt>
			<expr_stmt><expr><name><name>sum</name><index>[<expr><name>l</name></expr>]</index></name> <operator>+=</operator> <name>time</name></expr>;</expr_stmt>

			<expr_stmt><expr><name>time</name><operator>++</operator></expr>;</expr_stmt>
			<expr_stmt><expr><name>l</name> <operator>&lt;&lt;=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
		}</block></while>

		<expr_stmt><expr><name><name>cnt</name><index>[<expr><name>tmp</name></expr>]</index></name><operator>--</operator></expr>;</expr_stmt>
	}</block></for>
}</block></function>

<function><type><name>void</name></type> <name>solve</name><parameter_list>()</parameter_list> <block>{
	<expr_stmt><expr><name>ans</name> <operator>=</operator> <literal type="number">0x7f7f7f7f</literal></expr>;</expr_stmt>
	<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>N_Max</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
		<block type="pseudo"><if>if <condition>(<expr><name><name>cnt</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <name>n</name> <operator>&amp;&amp;</operator> <name>ans</name> <operator>&gt;</operator> <name><name>sum</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition><then>
			<block type="pseudo"><expr_stmt><expr><name>ans</name> <operator>=</operator> <name><name>sum</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block></then></if></block></for>

	<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%d\n"</literal></expr></argument>, <argument><expr><name>ans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
	<expr_stmt><expr><call><name>init</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>solve</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
}</block></function>
</unit>
