<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit   revision="0.9.5" language="C++" filename="12185483.cpp"><comment type="line">//Language: GNU C++11</comment>


<include>#<directive>include</directive> <file>&lt;iostream&gt;</file></include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>

<decl_stmt><decl><type><name>int</name></type> <name><name>l</name><index>[<expr><literal type="number">100003</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>d</name><index>[<expr><literal type="number">100003</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name>n</name></decl>, <decl><type ref="prev"/><name>i</name></decl>, <decl><type ref="prev"/><name>maxi</name><init>=<expr><literal type="number">100003</literal></expr></init></decl>, <decl><type ref="prev"/><name><name>nr</name><index>[<expr><literal type="number">100003</literal></expr>]</index></name></decl>;</decl_stmt>


<function><type><name>void</name></type> <name>Dist</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>)</parameter_list>
<block>{	<expr_stmt><expr><operator>++</operator><name><name>nr</name><index>[<expr><name>x</name></expr>]</index></name></expr>;</expr_stmt>
	<if>if <condition>(<expr><name>x</name><operator>/</operator><literal type="number">2</literal><operator>&gt;</operator><literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>l</name><index>[<expr><name>x</name><operator>/</operator><literal type="number">2</literal></expr>]</index></name><operator>!=</operator><name>i</name></expr>)</condition><then>
	<block>{	<expr_stmt><expr><name><name>d</name><index>[<expr><name>x</name><operator>/</operator><literal type="number">2</literal></expr>]</index></name><operator>+=</operator><name>y</name><operator>+</operator><literal type="number">1</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>l</name><index>[<expr><name>x</name><operator>/</operator><literal type="number">2</literal></expr>]</index></name><operator>=</operator><name>i</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>Dist</name><argument_list>(<argument><expr><name>x</name><operator>/</operator><literal type="number">2</literal></expr></argument>, <argument><expr><name>y</name><operator>+</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<if>if <condition>(<expr><literal type="number">2</literal><operator>*</operator><name>x</name><operator>&lt;=</operator><name>maxi</name> <operator>&amp;&amp;</operator> <name><name>l</name><index>[<expr><literal type="number">2</literal><operator>*</operator><name>x</name></expr>]</index></name><operator>!=</operator><name>i</name></expr>)</condition><then>
	<block>{	<expr_stmt><expr><name><name>d</name><index>[<expr><literal type="number">2</literal><operator>*</operator><name>x</name></expr>]</index></name><operator>+=</operator><name>y</name><operator>+</operator><literal type="number">1</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>l</name><index>[<expr><literal type="number">2</literal><operator>*</operator><name>x</name></expr>]</index></name><operator>=</operator><name>i</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>Dist</name><argument_list>(<argument><expr><literal type="number">2</literal><operator>*</operator><name>x</name></expr></argument>, <argument><expr><name>y</name><operator>+</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{	<decl_stmt><decl><type><name>int</name></type> <name>x</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name></expr>;</expr_stmt>
	<for>for <control>(<init><expr><name>i</name><operator>=</operator><literal type="number">1</literal></expr>;</init> <condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>
	<block>{	<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>x</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>l</name><index>[<expr><name>x</name></expr>]</index></name><operator>=</operator><name>i</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>Dist</name><argument_list>(<argument><expr><name>x</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>
	<decl_stmt><decl><type><name>int</name></type> <name>mini</name><init>=<expr><literal type="number">2000000000</literal></expr></init></decl>;</decl_stmt>
	<for>for <control>(<init><expr><name>i</name><operator>=</operator><literal type="number">1</literal></expr>;</init> <condition><expr><name>i</name><operator>&lt;=</operator><name>maxi</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>
		<block type="pseudo"><if>if <condition>(<expr><name><name>nr</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><name>n</name> <operator>&amp;&amp;</operator> <name>mini</name><operator>&gt;</operator><name><name>d</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition><then>
			<block type="pseudo"><expr_stmt><expr><name>mini</name><operator>=</operator><name><name>d</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block></then></if></block></for>
	<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>mini</name><operator>&lt;&lt;</operator><literal type="char">'\n'</literal></expr>;</expr_stmt>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
