<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit   revision="0.9.5" language="C++" filename="12285923.cpp"><comment type="line">//Language: GNU C++</comment>


<include>#<directive>include</directive><file>&lt;stdio.h&gt;</file></include>
<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>count</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>min</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>max</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<function><type><name>void</name></type> <name>swap</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>a</name></decl></parameter>,<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list><block>{
	<decl_stmt><decl><type><name>int</name></type> <name>temp</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>temp</name><operator>=</operator><operator>*</operator><name>a</name></expr>;</expr_stmt><empty_stmt>;</empty_stmt>
	<expr_stmt><expr><operator>*</operator><name>a</name><operator>=</operator><operator>*</operator><name>b</name></expr>;</expr_stmt>
	<expr_stmt><expr><operator>*</operator><name>b</name><operator>=</operator><name>temp</name></expr>;</expr_stmt>
}</block></function>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
	<expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name><name>a</name><index>[<expr><name>n</name></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name><name>b</name><index>[<expr><name>n</name></expr>]</index></name></decl>;</decl_stmt>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d%d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>,<argument><expr><operator>&amp;</operator><name><name>b</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></for>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
		<if>if<condition>(<expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name><operator>&gt;</operator><literal type="number">0</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>min</name><operator>+=</operator><literal type="number">1</literal></expr>;</expr_stmt></block></then></if>
}</block></for>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
		<for>for<control>(<init><decl><type><name>int</name></type> <name>j</name><init>=<expr><name>i</name><operator>+</operator><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>j</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>j</name><operator>++</operator></expr></incr>)</control> <block>{
			<if>if<condition>(<expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name><operator>&gt;</operator><name><name>a</name><index>[<expr><name>j</name></expr>]</index></name></expr>)</condition><then><block>{
				<expr_stmt><expr><call><name>swap</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>,<argument><expr><operator>&amp;</operator><name><name>a</name><index>[<expr><name>j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name>swap</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>b</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>,<argument><expr><operator>&amp;</operator><name><name>b</name><index>[<expr><name>j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></for>
}</block></for>
	<if>if<condition>(<expr><name>min</name><operator>&gt;</operator><name>n</name><operator>-</operator><name>min</name></expr>)</condition><then><block>{
		<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><literal type="number">2</literal><operator>*</operator><operator>(</operator><name>n</name><operator>-</operator><name>min</name><operator>)</operator><operator>+</operator><literal type="number">1</literal></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name>max</name><operator>+=</operator><name><name>b</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block></for>
}</block></then></if>
	<if>if<condition>(<expr><name>min</name><operator>==</operator><name>n</name><operator>-</operator><name>min</name></expr>)</condition><then><block>{
		<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><literal type="number">2</literal><operator>*</operator><operator>(</operator><name>n</name><operator>-</operator><name>min</name><operator>)</operator></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name>max</name><operator>+=</operator><name><name>b</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block></for>
}</block></then></if>
	<if>if<condition>(<expr><name>min</name><operator>&lt;</operator><name>n</name><operator>-</operator><name>min</name></expr>)</condition><then><block>{
		<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><name>n</name><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&gt;=</operator><name>n</name><operator>-</operator><literal type="number">2</literal><operator>*</operator><name>min</name><operator>-</operator><literal type="number">1</literal></expr>;</condition><incr><expr><name>i</name><operator>--</operator></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name>max</name><operator>+=</operator><name><name>b</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block></for>
}</block></then></if>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%d"</literal></expr></argument>,<argument><expr><name>max</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>
</unit>
