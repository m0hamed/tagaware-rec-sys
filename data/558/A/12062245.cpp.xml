<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit   revision="0.9.5" language="C++" filename="12062245.cpp"><comment type="line">//Language: MS C++</comment>


<include>#<directive>include</directive> <file>&lt;iostream&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;algorithm&gt;</file></include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
	<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>a</name></decl>,<decl><type ref="prev"/><name>b</name></decl>,<decl><type ref="prev"/><name>c</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>d</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>ans</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt> <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name><name>pair</name><argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>, <argument><expr><name>int</name></expr></argument>&gt;</argument_list></name></type><name><name>minus</name><index>[<expr><literal type="number">101</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>plus</name><index>[<expr><literal type="number">101</literal></expr>]</index></name></decl>;</decl_stmt>
	<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
		<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>a</name> <operator>&gt;&gt;</operator> <name>b</name></expr>;</expr_stmt>
		<if>if <condition>(<expr><name>a</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><then> <block>{ 
			<expr_stmt><expr><name><name>plus</name><index>[<expr><name>c</name></expr>]</index></name><operator>.</operator><name>first</name> <operator>=</operator> <name>a</name></expr>;</expr_stmt> <expr_stmt><expr><name><name>plus</name><index>[<expr><name>c</name></expr>]</index></name><operator>.</operator><name>second</name> <operator>=</operator> <name>b</name></expr>;</expr_stmt> <expr_stmt><expr><name>c</name><operator>++</operator></expr>;</expr_stmt>
		}</block></then>
		<else>else <block>{
			<expr_stmt><expr><name><name>minus</name><index>[<expr><name>d</name></expr>]</index></name><operator>.</operator><name>first</name> <operator>=</operator> <name>a</name></expr>;</expr_stmt> <expr_stmt><expr><name><name>minus</name><index>[<expr><name>d</name></expr>]</index></name><operator>.</operator><name>second</name> <operator>=</operator> <name>b</name></expr>;</expr_stmt> <expr_stmt><expr><name>d</name><operator>++</operator></expr>;</expr_stmt>
		}</block></else></if>
	}</block></for>
	<expr_stmt><expr><call><name>sort</name><argument_list>(<argument><expr><name>plus</name></expr></argument>, <argument><expr><name>plus</name> <operator>+</operator> <name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>sort</name><argument_list>(<argument><expr><name>minus</name></expr></argument>, <argument><expr><name>minus</name> <operator>+</operator> <name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><ternary><condition><expr><name>c</name> <operator>&gt;</operator> <name>d</name></expr> ?</condition><then> <expr><name>b</name> <operator>=</operator> <name>d</name> <operator>+</operator> <literal type="number">1</literal></expr> </then><else>: <expr><name>b</name> <operator>=</operator> <name>c</name> <operator>+</operator> <literal type="number">1</literal></expr></else></ternary></expr>;</expr_stmt>
	<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>b</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
			<block type="pseudo"><if>if<condition>(<expr><name><name>plus</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>second</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><then>
				<block type="pseudo"><expr_stmt><expr><name>ans</name> <operator>+=</operator> <name><name>plus</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>second</name></expr>;</expr_stmt></block></then></if></block></for>
	<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><name>d</name><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&gt;=</operator><name>d</name><operator>-</operator><name>b</name></expr>;</condition> <incr><expr><name>i</name><operator>--</operator></expr></incr>)</control>
			<block type="pseudo"><if>if<condition>(<expr><name><name>minus</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>second</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><then> 
			     <block type="pseudo"><expr_stmt><expr><name>ans</name> <operator>+=</operator> <name><name>minus</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>second</name></expr>;</expr_stmt></block></then></if></block></for>		
	<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>ans</name></expr>;</expr_stmt>
}</block></function></unit>
