<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit   revision="0.9.5" language="C++" filename="12144082.cpp"><comment type="line">//Language: GNU C++</comment>


<include>#<directive>include</directive> <file>&lt;iostream&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;cstdio&gt;</file></include>
<include>#<directive>include</directive> <file>&lt;algorithm&gt;</file></include>

<using>using <namespace>namespace <name>std</name>;</namespace></using>

<struct>struct <name>camp</name>
<block>{<public type="default">
    <decl_stmt><decl><type><name>int</name></type> <name>a</name></decl>, <decl><type ref="prev"/><name>b</name></decl>;</decl_stmt>
</public>}</block><decl><name><name>point</name><index>[<expr><literal type="number">105</literal></expr>]</index></name></decl>;</struct>

<function><type><name>bool</name></type> <name>compare</name> <parameter_list>(<parameter><decl><type><name>camp</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>camp</name></type> <name>y</name></decl></parameter>)</parameter_list>
<block>{
    <return>return <expr><name><name>x</name><operator>.</operator><name>a</name></name> <operator>&gt;</operator> <name><name>y</name><operator>.</operator><name>a</name></name></expr>;</return>
}</block></function>

<function><type><name>int</name></type> <name>main</name> <parameter_list>()</parameter_list>
<block>{
    <decl_stmt><decl><type><name>int</name></type> <name>nn</name></decl>, <decl><type ref="prev"/><name>temp1</name></decl>, <decl><type ref="prev"/><name>temp2</name></decl>;</decl_stmt>
    <while>while <condition>(<expr><call><name>scanf</name> <argument_list>(<argument><expr><literal type="string">"%d"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>nn</name></expr></argument>)</argument_list></call><operator>!=</operator><name>EOF</name></expr>)</condition>
    <block>{
        <decl_stmt><decl><type><name>int</name></type>  <name>s</name><init>=<expr><literal type="number">0</literal></expr></init></decl>, <decl><type ref="prev"/><name>cnst1</name><init>=<expr><literal type="number">0</literal></expr></init></decl>, <decl><type ref="prev"/><name>cnst2</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>nn</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
            <block type="pseudo"><expr_stmt><expr><call><name>scanf</name> <argument_list>(<argument><expr><literal type="string">"%d%d"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>point</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>a</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>point</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></for>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>nn</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
        <block>{
            <if>if <condition>(<expr><name><name>point</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>a</name><operator>&lt;</operator><literal type="number">0</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>cnst1</name><operator>++</operator></expr>;</expr_stmt></block></then>
            <elseif>else <if>if <condition>(<expr><name><name>point</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>a</name><operator>&gt;</operator><literal type="number">0</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>cnst2</name><operator>++</operator></expr>;</expr_stmt></block></then></if></elseif></if>
        }</block></for>
        <expr_stmt><expr><call><name>sort</name> <argument_list>(<argument><expr><name>point</name></expr></argument>, <argument><expr><name>point</name><operator>+</operator><name>nn</name></expr></argument>, <argument><expr><name>compare</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>nn</name><operator>-</operator><literal type="number">1</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
        <block>{
            <if>if <condition>(<expr><name><name>point</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>a</name><operator>&gt;</operator><literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>point</name><index>[<expr><name>i</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>a</name><operator>&lt;</operator><literal type="number">0</literal></expr>)</condition><then>
            <block>{
                <expr_stmt><expr><name>temp1</name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>
                <expr_stmt><expr><name>temp2</name> <operator>=</operator> <name>i</name><operator>+</operator><literal type="number">1</literal></expr>;</expr_stmt>
                <break>break;</break>
            }</block></then></if>
        }</block></for>

        <if>if <condition>(<expr><name>cnst1</name><operator>==</operator><name>cnst2</name></expr>)</condition><then>
        <block>{
            <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>nn</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
                <block type="pseudo"><expr_stmt><expr><name>s</name> <operator>+=</operator> <name><name>point</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>b</name></expr>;</expr_stmt></block></for>
        }</block></then>
        <elseif>else <if>if <condition>(<expr><name>cnst1</name><operator>&gt;</operator><name>cnst2</name></expr>)</condition><then>
        <block>{
            <if>if <condition>(<expr><name>cnst2</name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>s</name> <operator>=</operator> <name><name>point</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>b</name></expr>;</expr_stmt></block></then>
            <else>else
            <block>{
                <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>cnst2</name><operator>+</operator><literal type="number">1</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
                    <block type="pseudo"><expr_stmt><expr><name>s</name> <operator>=</operator> <name>s</name> <operator>+</operator> <name><name>point</name><index>[<expr><name>temp2</name><operator>++</operator></expr>]</index></name><operator>.</operator><name>b</name></expr>;</expr_stmt></block></for>
                <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>cnst2</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
                    <block type="pseudo"><expr_stmt><expr><name>s</name> <operator>=</operator> <name>s</name> <operator>+</operator> <name><name>point</name><index>[<expr><name>temp1</name><operator>--</operator></expr>]</index></name><operator>.</operator><name>b</name></expr>;</expr_stmt></block></for>
            }</block></else></if>
        }</block></then></if></elseif>
        <elseif>else <if>if <condition>(<expr><name>cnst1</name><operator>&lt;</operator><name>cnst2</name></expr>)</condition><then>
        <block>{
            <if>if <condition>(<expr><name>cnst1</name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>s</name> <operator>=</operator> <name><name>point</name><index>[<expr><name>cnst2</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>b</name></expr>;</expr_stmt></block></then>
            <else>else
            <block>{
                <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>cnst1</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
                    <block type="pseudo"><expr_stmt><expr><name>s</name> <operator>=</operator> <name>s</name> <operator>+</operator> <name><name>point</name><index>[<expr><name>temp2</name><operator>++</operator></expr>]</index></name><operator>.</operator><name>b</name></expr>;</expr_stmt></block></for>
                <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>cnst1</name><operator>+</operator><literal type="number">1</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
                    <block type="pseudo"><expr_stmt><expr><name>s</name> <operator>=</operator> <name>s</name> <operator>+</operator> <name><name>point</name><index>[<expr><name>temp1</name><operator>--</operator></expr>]</index></name><operator>.</operator><name>b</name></expr>;</expr_stmt></block></for>
            }</block></else></if>
        }</block></then></if></elseif></if>
        <expr_stmt><expr><call><name>printf</name> <argument_list>(<argument><expr><literal type="string">"%d\n"</literal></expr></argument>, <argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></while>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>

 	   	 	  					  				 		   				</unit>
