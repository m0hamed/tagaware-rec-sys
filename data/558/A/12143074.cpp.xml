<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit   revision="0.9.5" language="C++" filename="12143074.cpp"><comment type="line">//Language: GNU C++</comment>


<include>#<directive>include</directive><file>&lt;iostream&gt;</file></include>
<include>#<directive>include</directive><file>&lt;cstring&gt;</file></include>
<include>#<directive>include</directive><file>&lt;cstdio&gt;</file></include>
<include>#<directive>include</directive><file>&lt;algorithm&gt;</file></include>
<include>#<directive>include</directive><file>&lt;map&gt;</file></include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><name>int</name></type> <name><name>m</name><index>[<expr><literal type="number">110</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
    <while>while<condition>(<expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name></expr>)</condition>
    <block>{
        <decl_stmt><decl><type><name><name>map</name><argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>,<argument><expr><name>int</name></expr></argument>&gt;</argument_list></name></type><name>s</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>sum1</name></decl>,<decl><type ref="prev"/><name>sum2</name></decl>,<decl><type ref="prev"/><name>sum3</name></decl>;</decl_stmt><expr_stmt><expr><name>sum1</name><operator>=</operator><name>sum2</name><operator>=</operator><name>sum3</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
        <for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
        <block>{
            <decl_stmt><decl><type><name>int</name></type> <name>a</name></decl>,<decl><type ref="prev"/><name>b</name></decl>;</decl_stmt>
            <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>a</name><operator>&gt;&gt;</operator><name>b</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>m</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><name>a</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>s</name><index>[<expr><name>a</name></expr>]</index></name><operator>=</operator><name>b</name></expr>;</expr_stmt>
            <if>if<condition>(<expr><name>a</name><operator>&gt;</operator><literal type="number">0</literal></expr>)</condition><then>
                <block type="pseudo"><expr_stmt><expr><name>sum2</name><operator>+=</operator><name>b</name></expr>;</expr_stmt></block></then>
            <else>else
                <block type="pseudo"><expr_stmt><expr><name>sum3</name><operator>+=</operator><name>b</name></expr>;</expr_stmt></block></else></if>
            <expr_stmt><expr><name>sum1</name><operator>+=</operator><name>b</name></expr>;</expr_stmt>

        }</block></for>
        <expr_stmt><expr><call><name>sort</name><argument_list>(<argument><expr><name>m</name></expr></argument>,<argument><expr><name>m</name><operator>+</operator><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><decl_stmt><decl><type><name>int</name></type> <name>number</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>flag</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

        <for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
        <block>{
            <if>if<condition>(<expr><name><name>m</name><index>[<expr><name>i</name></expr>]</index></name><operator>&lt;</operator><literal type="number">0</literal><operator>&amp;&amp;</operator><name><name>m</name><index>[<expr><name>i</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name><operator>&gt;</operator><literal type="number">0</literal></expr>)</condition><then>
            <block>{
                <expr_stmt><expr><name>number</name><operator>=</operator><name>i</name><operator>+</operator><literal type="number">1</literal></expr>;</expr_stmt>
                <expr_stmt><expr><name>flag</name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
            }</block></then></if>
        }</block></for>
        <if>if<condition>(<expr><name>flag</name><operator>==</operator><literal type="number">0</literal><operator>&amp;&amp;</operator><name><name>m</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>&gt;</operator><literal type="number">0</literal></expr>)</condition><then>
        <block>{
            <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name><name>s</name><index>[<expr><name><name>m</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>]</index></name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
            <continue>continue;</continue>
        }</block></then></if>
        <if>if<condition>(<expr><name>flag</name><operator>==</operator><literal type="number">0</literal><operator>&amp;&amp;</operator><name><name>m</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>&lt;</operator><literal type="number">0</literal></expr>)</condition><then>
        <block>{
            <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name><name>s</name><index>[<expr><name><name>m</name><index>[<expr><name>n</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr>]</index></name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
            <continue>continue;</continue>
        }</block></then></if>
        <if>if<condition>(<expr><name>flag</name><operator>==</operator><literal type="number">1</literal></expr>)</condition><then>
        <block>{
            <if>if<condition>(<expr><name>number</name><operator>&lt;</operator><name>n</name><operator>-</operator><name>number</name></expr>)</condition><then>
            <block>{
                <decl_stmt><decl><type><name>int</name></type> <name>ans</name><init>=<expr><name>sum3</name></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name>int</name></type> <name>l</name></decl>;</decl_stmt>
                <for>for<control>(<init><expr><name>l</name><operator>=</operator><literal type="number">0</literal></expr>;</init><condition><expr><name>l</name><operator>&lt;=</operator><name>number</name></expr>;</condition><incr><expr><name>l</name><operator>++</operator></expr></incr>)</control>
                    <block type="pseudo"><expr_stmt><expr><name>ans</name><operator>+=</operator><name><name>s</name><index>[<expr><name><name>m</name><index>[<expr><name>number</name><operator>+</operator><name>l</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt></block></for>
                <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>ans</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
                <continue>continue;</continue>
            }</block></then></if>
            <if>if<condition>(<expr><name>number</name><operator>==</operator><name>n</name><operator>-</operator><name>number</name></expr>)</condition><then>
            <block>{
                <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>sum1</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
                <continue>continue;</continue>
            }</block></then></if>
            <if>if<condition>(<expr><name>number</name><operator>&gt;</operator><name>n</name><operator>-</operator><name>number</name></expr>)</condition><then>
            <block>{
                <decl_stmt><decl><type><name>int</name></type> <name>ans</name><init>=<expr><name>sum2</name></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name>int</name></type> <name>l</name></decl>;</decl_stmt>
                <for>for<control>(<init><expr><name>l</name><operator>=</operator><literal type="number">0</literal></expr>;</init><condition><expr><name>l</name><operator>&lt;=</operator><name>n</name><operator>-</operator><name>number</name></expr>;</condition><incr><expr><name>l</name><operator>++</operator></expr></incr>)</control>
                    <block type="pseudo"><expr_stmt><expr><name>ans</name><operator>+=</operator><name><name>s</name><index>[<expr><name><name>m</name><index>[<expr><name>number</name><operator>-</operator><literal type="number">1</literal><operator>-</operator><name>l</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt></block></for>
                <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>ans</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
                <continue>continue;</continue>

            }</block></then></if>
        }</block></then></if>
    }</block></while>
}</block></function>

 					  	 			 	   			 	 	 	  		</unit>
