//Language: GNU C++


/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author prateepm
 */

#include <iostream>
#include <fstream>
#include <map>
#include <string.h>

using namespace std;

const int MAXA = (int) 1e6+1;
int a[MAXA], c[MAXA], ri[MAXA];
class TaskB {
public:
	void solve(std::istream& in, std::ostream& out) {
        ios::sync_with_stdio(false);
        memset(a,0,sizeof(a));
        memset(c,0,sizeof(c));
        memset(ri,0,sizeof(ri));
        int n; in >> n;
        int maxc = 0;
        for(int i = 0; i < n; i++) {
            in >> a[i];
            c[a[i]]++;
            if(maxc < c[a[i]]) maxc = c[a[i]];
            if(ri[a[i]] <= i) ri[a[i]] = i;
        }
        pair<int,int> res = make_pair(0,n+1);
        for(int i = 0; i < n; i++)
            if(c[a[i]] == maxc) {
                c[a[i]] = 0;
                int l = i, r = ri[a[i]];
                if(r - l < res.second - res.first) {
                    res = make_pair(l+1,r+1);
                }
            }
        out << res.first << ' ' << res.second;
	}
};


int main() {
	TaskB solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
