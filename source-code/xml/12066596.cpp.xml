<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="cpp/12066596.cpp"><comment type="line">//Language: GNU C++</comment>


<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;cstring&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;algorithm&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FI</name><parameter_list>(<parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>for(int i=0;i&lt;n;i++)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FJ</name><parameter_list>(<parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>for(int j=0;j&lt;n;j++)</cpp:value></cpp:define>
<decl_stmt><decl><type><name>char</name></type> <name><name>s</name><index>[<expr><literal type="number">100010</literal></expr>]</index></name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
    <decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>, <decl><type ref="prev"/><name>q</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name> <operator>&gt;&gt;</operator> <name>q</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>s</name></expr>;</expr_stmt>
    <macro><name>FI</name><argument_list>(<argument>n</argument>)</argument_list></macro> <expr_stmt><expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name> <operator>-=</operator> <literal type="char">'a'</literal></expr>;</expr_stmt>
    <while>while <condition>(<expr><name>q</name><operator>--</operator></expr>)</condition><block>{
        <decl_stmt><decl><type><name>int</name></type> <name><name>cnt2</name><index>[<expr><literal type="number">27</literal><operator>*</operator><literal type="number">256</literal></expr>]</index></name> <init>= <expr><block>{}</block></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name><name>cnt</name><index>[<expr><literal type="number">26</literal></expr>]</index></name> <init>= <expr><block>{}</block></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>j</name></decl>, <decl><type ref="prev"/><name>k</name></decl>;</decl_stmt>
        <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>i</name> <operator>&gt;&gt;</operator> <name>j</name> <operator>&gt;&gt;</operator> <name>k</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>i</name><operator>--</operator></expr>;</expr_stmt> <expr_stmt><expr><name>j</name><operator>--</operator></expr>;</expr_stmt>
        <if>if <condition>(<expr><operator>~</operator><operator>(</operator><name>j</name> <operator>-</operator> <name>i</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">1</literal></expr>)</condition><then> <block>{
            <expr_stmt><expr><name><name>cnt</name><index>[<expr><name><name>s</name><index>[<expr><name>j</name></expr>]</index></name></expr>]</index></name><operator>++</operator></expr>;</expr_stmt>
            <expr_stmt><expr><operator>--</operator><name>j</name></expr>;</expr_stmt>
        }</block></then></if>
        <for>for <control>(<init><decl><type><name>short</name><modifier>*</modifier></type> <name>it</name> <init>= <expr><operator>(</operator><name>short</name><operator>*</operator><operator>)</operator> <operator>(</operator><name>s</name> <operator>+</operator> <name>i</name><operator>)</operator></expr></init></decl>;</init> <condition><expr><name>it</name> <operator>&lt;=</operator> <operator>(</operator><name>short</name><operator>*</operator><operator>)</operator> <operator>(</operator><name>s</name> <operator>+</operator> <name>j</name><operator>)</operator></expr>;</condition> <incr><expr><operator>++</operator><name>it</name></expr></incr>)</control>
            <block type="pseudo"><expr_stmt><expr><name><name>cnt2</name><index>[<expr><operator>*</operator><name>it</name></expr>]</index></name><operator>++</operator></expr>;</expr_stmt></block></for>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">26</literal></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{
            <for>for <control>(<init><decl><type><name>int</name></type> <name>j</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <literal type="number">26</literal></expr>;</condition> <incr><expr><operator>++</operator><name>j</name></expr></incr>)</control> <block>{
                <expr_stmt><expr><name><name>cnt</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+=</operator> <name><name>cnt2</name><index>[<expr><name>i</name> <operator>*</operator> <literal type="number">256</literal> <operator>+</operator> <name>j</name></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name>cnt</name><index>[<expr><name>j</name></expr>]</index></name> <operator>+=</operator> <name><name>cnt2</name><index>[<expr><name>i</name> <operator>*</operator> <literal type="number">256</literal> <operator>+</operator> <name>j</name></expr>]</index></name></expr>;</expr_stmt>
            }</block></for>
        }</block></for>
        <if>if <condition>(<expr><name>k</name></expr>)</condition><then><block>{
            <for>for <control>(<init><decl><type><name>char</name></type> <name>r</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>r</name> <operator>&lt;</operator> <literal type="number">26</literal></expr>;</condition> <incr><expr><name>r</name><operator>++</operator></expr></incr>)</control><block>{
                <expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>s</name> <operator>+</operator> <name>i</name></expr></argument>, <argument><expr><name>r</name></expr></argument>, <argument><expr><name><name>cnt</name><index>[<expr><name>r</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name>i</name> <operator>+=</operator> <name><name>cnt</name><index>[<expr><name>r</name></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name>cnt</name><index>[<expr><name>r</name></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
            }</block></for>
        }</block></then>
        <else>else<block>{
            <for>for <control>(<init><decl><type><name>char</name></type> <name>r</name> <init>= <expr><literal type="number">25</literal></expr></init></decl>;</init> <condition><expr><name>r</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><name>r</name><operator>--</operator></expr></incr>)</control><block>{
                <expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>s</name> <operator>+</operator> <name>i</name></expr></argument>, <argument><expr><name>r</name></expr></argument>, <argument><expr><name><name>cnt</name><index>[<expr><name>r</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name>i</name> <operator>+=</operator> <name><name>cnt</name><index>[<expr><name>r</name></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name>cnt</name><index>[<expr><name>r</name></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
            }</block></for>
        }</block></else></if>
    }</block></while>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{
        <expr_stmt><expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+=</operator> <literal type="char">'a'</literal></expr>;</expr_stmt>
    }</block></for>
    <expr_stmt><expr><call><name>puts</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
