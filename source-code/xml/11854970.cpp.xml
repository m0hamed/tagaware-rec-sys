<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="cpp/11854970.cpp"><comment type="line">//Language: GNU C++</comment>


<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;cstdio&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{

    <decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>mn1</name></decl>,<decl><type ref="prev"/><name>mn2</name></decl>,<decl><type ref="prev"/><name>mn3</name></decl>,<decl><type ref="prev"/><name>mx1</name></decl>,<decl><type ref="prev"/><name>mx2</name></decl>,<decl><type ref="prev"/><name>mx3</name></decl>,<decl><type ref="prev"/><name>f</name></decl>,<decl><type ref="prev"/><name>s</name></decl>,<decl><type ref="prev"/><name>t</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>mn1</name><operator>&gt;&gt;</operator><name>mx1</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>f</name><operator>=</operator><name>mn1</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>n</name><operator>-=</operator><name>mn1</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>mn2</name><operator>&gt;&gt;</operator><name>mx2</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>s</name><operator>=</operator><name>mn2</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>n</name><operator>-=</operator><name>mn2</name></expr>;</expr_stmt>

    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>mn3</name><operator>&gt;&gt;</operator><name>mx3</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>t</name><operator>=</operator><name>mn3</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>n</name><operator>-=</operator><name>mn3</name></expr>;</expr_stmt>
    <if>if<condition>(<expr><name>n</name></expr>)</condition><then>
    <block>{
        <if>if<condition>(<expr><name>n</name><operator>&lt;=</operator><name>mx1</name><operator>-</operator><name>mn1</name></expr>)</condition><then>
        <block>{
            <expr_stmt><expr><name>f</name><operator>+=</operator><name>n</name></expr>;</expr_stmt>
            <expr_stmt><expr><name>n</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
        }</block></then>
        <else>else<block>{
            <expr_stmt><expr><name>f</name><operator>=</operator><name>f</name><operator>+</operator><operator>(</operator><name>mx1</name><operator>-</operator><name>mn1</name><operator>)</operator></expr>;</expr_stmt>
            <expr_stmt><expr><name>n</name><operator>=</operator><name>n</name><operator>-</operator><operator>(</operator><name>mx1</name><operator>-</operator><name>mn1</name><operator>)</operator></expr>;</expr_stmt>
        }</block></else></if>
    }</block></then></if>
    <if>if<condition>(<expr><name>n</name></expr>)</condition><then>
    <block>{
        <if>if<condition>(<expr><name>n</name><operator>&lt;=</operator><name>mx2</name><operator>-</operator><name>mn2</name></expr>)</condition><then>
        <block>{
            <expr_stmt><expr><name>s</name><operator>+=</operator><name>n</name></expr>;</expr_stmt>
            <expr_stmt><expr><name>n</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
        }</block></then>
        <else>else<block>{
            <expr_stmt><expr><name>s</name><operator>=</operator><name>s</name><operator>+</operator><operator>(</operator><name>mx2</name><operator>-</operator><name>mn2</name><operator>)</operator></expr>;</expr_stmt>
            <expr_stmt><expr><name>n</name><operator>=</operator><name>n</name><operator>-</operator><operator>(</operator><name>mx2</name><operator>-</operator><name>mn2</name><operator>)</operator></expr>;</expr_stmt>
        }</block></else></if>
    }</block></then></if>
    <if>if<condition>(<expr><name>n</name></expr>)</condition><then>
    <block>{
        <if>if<condition>(<expr><name>n</name><operator>&lt;=</operator><name>mx3</name><operator>-</operator><name>mn3</name></expr>)</condition><then>
        <block>{
            <expr_stmt><expr><name>t</name><operator>+=</operator><name>n</name></expr>;</expr_stmt>
            <expr_stmt><expr><name>n</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
        }</block></then>
        <else>else<block>{
            <expr_stmt><expr><name>t</name><operator>=</operator><name>t</name><operator>+</operator><operator>(</operator><name>mx3</name><operator>-</operator><name>mn3</name><operator>)</operator></expr>;</expr_stmt>
            <expr_stmt><expr><name>n</name><operator>=</operator><name>n</name><operator>-</operator><operator>(</operator><name>mx3</name><operator>-</operator><name>mn3</name><operator>)</operator></expr>;</expr_stmt>
        }</block></else></if>
    }</block></then></if>
    <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%d %d %d\n"</literal></expr></argument>,<argument><expr><name>f</name></expr></argument>,<argument><expr><name>s</name></expr></argument>,<argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><literal type="number">0</literal></expr>;</return>


}</block></function>
</unit>
