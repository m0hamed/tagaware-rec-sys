<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="cpp/12182305.cpp"><comment type="line">//Language: GNU C++11</comment>


<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;cstdio&gt;</cpp:file></cpp:include>
<decl_stmt><decl><type><name>int</name></type> <name>a1</name></decl>,<decl><type ref="prev"/><name>a2</name></decl>,<decl><type ref="prev"/><name>a3</name></decl>,<decl><type ref="prev"/><name>a4</name></decl>,<decl><type ref="prev"/><name>a5</name></decl>,<decl><type ref="prev"/><name>a6</name></decl>,<decl><type ref="prev"/><name>sum</name></decl>,<decl><type ref="prev"/><name>tem</name></decl>,<decl><type ref="prev"/><name>i</name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name> <parameter_list>()</parameter_list>
<block>{
  <expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d %d %d %d %d %d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>a1</name></expr></argument>,<argument><expr><operator>&amp;</operator><name>a2</name></expr></argument>,<argument><expr><operator>&amp;</operator><name>a3</name></expr></argument>,<argument><expr><operator>&amp;</operator><name>a4</name></expr></argument>,<argument><expr><operator>&amp;</operator><name>a5</name></expr></argument>,<argument><expr><operator>&amp;</operator><name>a6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name>sum</name><operator>=</operator><operator>(</operator><name>a1</name><operator>+</operator><name>a2</name><operator>)</operator><operator>*</operator><literal type="number">2</literal><operator>*</operator><operator>(</operator><name>a3</name><operator>+</operator><name>a2</name><operator>)</operator></expr>;</expr_stmt>
  <expr_stmt><expr><name>sum</name><operator>-=</operator><operator>(</operator><name>a2</name><operator>*</operator><name>a2</name><operator>)</operator><operator>+</operator><operator>(</operator><name>a5</name><operator>*</operator><name>a5</name><operator>)</operator></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%d"</literal></expr></argument>,<argument><expr><name>sum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
