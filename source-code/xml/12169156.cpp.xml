<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="cpp/12169156.cpp"><comment type="line">//Language: GNU C++11</comment>


<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;iostream&gt;</cpp:file></cpp:include>

<using>using <namespace>namespace <name>std</name>;</namespace></using>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
    <decl_stmt><decl><type><name>int</name></type> <name>a1</name></decl>,<decl><type ref="prev"/><name>b1</name></decl>,<decl><type ref="prev"/><name>a2</name></decl>,<decl><type ref="prev"/><name>b2</name></decl>,<decl><type ref="prev"/><name>a3</name></decl>,<decl><type ref="prev"/><name>b3</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>a1</name><operator>&gt;&gt;</operator><name>b1</name><operator>&gt;&gt;</operator><name>a2</name><operator>&gt;&gt;</operator><name>b2</name><operator>&gt;&gt;</operator><name>a3</name><operator>&gt;&gt;</operator><name>b3</name></expr>;</expr_stmt>
    <if>if<condition>(<expr><name>a2</name><operator>+</operator><name>a3</name><operator>&lt;=</operator><name>a1</name> <operator>&amp;&amp;</operator> <name>b2</name><operator>&lt;=</operator><name>b1</name> <operator>&amp;&amp;</operator> <name>b3</name><operator>&lt;=</operator><name>b1</name></expr>)</condition><then><block>{<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"YES"</literal></expr>;</expr_stmt><return>return <expr><literal type="number">0</literal></expr>;</return>}</block></then></if>
    <if>if<condition>(<expr><name>a2</name><operator>+</operator><name>b3</name><operator>&lt;=</operator><name>a1</name> <operator>&amp;&amp;</operator> <name>b2</name><operator>&lt;=</operator><name>b1</name> <operator>&amp;&amp;</operator> <name>a3</name><operator>&lt;=</operator><name>b1</name></expr>)</condition><then><block>{<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"YES"</literal></expr>;</expr_stmt><return>return <expr><literal type="number">0</literal></expr>;</return>}</block></then></if>
    <if>if<condition>(<expr><name>b2</name><operator>+</operator><name>a3</name><operator>&lt;=</operator><name>a1</name> <operator>&amp;&amp;</operator> <name>a2</name><operator>&lt;=</operator><name>b1</name> <operator>&amp;&amp;</operator> <name>b3</name><operator>&lt;=</operator><name>b1</name></expr>)</condition><then><block>{<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"YES"</literal></expr>;</expr_stmt><return>return <expr><literal type="number">0</literal></expr>;</return>}</block></then></if>
    <if>if<condition>(<expr><name>b2</name><operator>+</operator><name>b3</name><operator>&lt;=</operator><name>a1</name> <operator>&amp;&amp;</operator> <name>a2</name><operator>&lt;=</operator><name>b1</name> <operator>&amp;&amp;</operator> <name>a3</name><operator>&lt;=</operator><name>b1</name></expr>)</condition><then><block>{<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"YES"</literal></expr>;</expr_stmt><return>return <expr><literal type="number">0</literal></expr>;</return>}</block></then></if>

    <if>if<condition>(<expr><name>a2</name><operator>+</operator><name>a3</name><operator>&lt;=</operator><name>b1</name> <operator>&amp;&amp;</operator> <name>b2</name><operator>&lt;=</operator><name>a1</name> <operator>&amp;&amp;</operator> <name>b3</name><operator>&lt;=</operator><name>a1</name></expr>)</condition><then><block>{<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"YES"</literal></expr>;</expr_stmt><return>return <expr><literal type="number">0</literal></expr>;</return>}</block></then></if>
    <if>if<condition>(<expr><name>a2</name><operator>+</operator><name>b3</name><operator>&lt;=</operator><name>b1</name> <operator>&amp;&amp;</operator> <name>b2</name><operator>&lt;=</operator><name>a1</name> <operator>&amp;&amp;</operator> <name>a3</name><operator>&lt;=</operator><name>a1</name></expr>)</condition><then><block>{<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"YES"</literal></expr>;</expr_stmt><return>return <expr><literal type="number">0</literal></expr>;</return>}</block></then></if>
    <if>if<condition>(<expr><name>b2</name><operator>+</operator><name>a3</name><operator>&lt;=</operator><name>b1</name> <operator>&amp;&amp;</operator> <name>a2</name><operator>&lt;=</operator><name>a1</name> <operator>&amp;&amp;</operator> <name>b3</name><operator>&lt;=</operator><name>a1</name></expr>)</condition><then><block>{<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"YES"</literal></expr>;</expr_stmt><return>return <expr><literal type="number">0</literal></expr>;</return>}</block></then></if>
    <if>if<condition>(<expr><name>b2</name><operator>+</operator><name>b3</name><operator>&lt;=</operator><name>b1</name> <operator>&amp;&amp;</operator> <name>a2</name><operator>&lt;=</operator><name>a1</name> <operator>&amp;&amp;</operator> <name>a3</name><operator>&lt;=</operator><name>a1</name></expr>)</condition><then><block>{<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"YES"</literal></expr>;</expr_stmt><return>return <expr><literal type="number">0</literal></expr>;</return>}</block></then></if>
    <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"NO"</literal></expr>;</expr_stmt>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
