<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="cpp/12585339.cpp"><comment type="line">//Language: GNU C++</comment>


<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;cstdio&gt;</cpp:file></cpp:include> 
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;cstring&gt;</cpp:file></cpp:include> 
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;map&gt;</cpp:file></cpp:include> 
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;iostream&gt;</cpp:file></cpp:include> 
<using>using <namespace>namespace <name>std</name>;</namespace></using> 
<typedef>typedef <type><name>long</name> <name>long</name></type> <name>LL</name>;</typedef> 
<decl_stmt><decl><type><name><name>map</name><argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>, <argument><expr><name>LL</name></expr></argument>&gt;</argument_list></name></type> <name>s1</name></decl>, <decl><type ref="prev"/><name>s2</name></decl>;</decl_stmt> 
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> 
<block>{ 
    <decl_stmt><decl><type><name>LL</name></type> <name>n</name></decl>, <decl><type ref="prev"/><name>k</name></decl>;</decl_stmt> 
    <decl_stmt><decl><type><name>LL</name></type> <name>ans</name></decl>, <decl><type ref="prev"/><name>x</name></decl>;</decl_stmt> 
	<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name> <operator>&gt;&gt;</operator> <name>k</name></expr>;</expr_stmt> 
	<expr_stmt><expr><name>ans</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt> 
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> 
	<block>{ 
	    <expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%I64d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
		<if>if<condition>(<expr><name>x</name><operator>%</operator><name>k</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><then> 
		<block>{ 
		    <decl_stmt><decl><type><name>LL</name></type> <name>t1</name> <init>= <expr><name><name>s2</name><index>[<expr><name>x</name><operator>/</operator><name>k</name></expr>]</index></name></expr></init></decl>;</decl_stmt> 
			<expr_stmt><expr><name>ans</name> <operator>+=</operator> <name>t1</name></expr>;</expr_stmt> 
			<decl_stmt><decl><type><name>LL</name></type> <name>t2</name> <init>= <expr><name><name>s1</name><index>[<expr><name>x</name><operator>/</operator><name>k</name></expr>]</index></name></expr></init></decl>;</decl_stmt> 
			<expr_stmt><expr><name><name>s2</name><index>[<expr><name>x</name></expr>]</index></name> <operator>+=</operator> <name>t2</name></expr>;</expr_stmt> 
		}</block></then></if> 
	    <expr_stmt><expr><name><name>s1</name><index>[<expr><name>x</name></expr>]</index></name><operator>++</operator></expr>;</expr_stmt> 
	}</block></for> 
	<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>ans</name> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt> 
    <return>return <expr><literal type="number">0</literal></expr>;</return> 
}</block></function> 
	 	  	 	 		  	  		   				 	  	</unit>
