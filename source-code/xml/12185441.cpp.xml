<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="cpp/12185441.cpp"><comment type="line">//Language: GNU C++</comment>


<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;algorithm&gt;</cpp:file></cpp:include>

<using>using <namespace>namespace <name>std</name>;</namespace></using>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>N</name><init>=<expr><literal type="number">100010</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>long</name> <name>long</name></type> <name>pr</name><init>=<expr><call>(<name>long</name> <name>long</name>)<argument_list>(<argument><expr><operator>(</operator><literal type="number">1e9</literal><operator>)</operator><operator>+</operator><literal type="number">7</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>ans</name></decl>,<decl><type ref="prev"/><name><name>p</name><index>[<expr><name>N</name><operator>*</operator><literal type="number">2</literal></expr>]</index></name></decl>,<decl><type ref="prev"/><name><name>f</name><index>[<expr><literal type="number">2010</literal></expr>]</index></name></decl>,<decl><type ref="prev"/><name><name>g</name><index>[<expr><literal type="number">2010</literal></expr>]</index></name></decl>,<decl><type ref="prev"/><name><name>q</name><index>[<expr><name>N</name><operator>*</operator><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>
<struct>struct <name>node</name>
<block>{<public type="default">
    <decl_stmt><decl><type><name>int</name></type> <name>x</name></decl>,<decl><type ref="prev"/><name>y</name></decl>;</decl_stmt>
</public>}</block><decl><name><name>s</name><index>[<expr><literal type="number">2010</literal></expr>]</index></name></decl>;</struct>
<decl_stmt><decl><type><name>int</name></type> <name>h</name></decl>,<decl><type ref="prev"/><name>w</name></decl>,<decl><type ref="prev"/><name>n</name></decl>;</decl_stmt>

<function><type><name>long</name> <name>long</name></type> <name>quick</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name></type> <name>a</name></decl></parameter>,<parameter><decl><type><name>long</name> <name>long</name></type> <name>b</name></decl></parameter>)</parameter_list>
<block>{
    <decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>ret</name><init>=<expr><literal type="number">1LL</literal></expr></init></decl>;</decl_stmt>
    <for>for<control>(<init><expr><name>a</name><operator>%=</operator><name>pr</name></expr>;</init><condition><expr><name>b</name></expr>;</condition><incr><expr><name>b</name><operator>&gt;&gt;=</operator><literal type="number">1LL</literal></expr></incr>)</control>
    <block>{
        <if>if<condition>(<expr><name>b</name><operator>&amp;</operator><literal type="number">1LL</literal></expr>)</condition><then>
        <block>{
            <expr_stmt><expr><name>ret</name><operator>*=</operator><name>a</name></expr>;</expr_stmt>
            <expr_stmt><expr><name>ret</name><operator>%=</operator><name>pr</name></expr>;</expr_stmt>
        }</block></then></if>
        <expr_stmt><expr><name>a</name><operator>*=</operator><name>a</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>a</name><operator>%=</operator><name>pr</name></expr>;</expr_stmt>
    }</block></for>
    <return>return <expr><name>ret</name></expr>;</return>
}</block></function>
<function><type><name>long</name> <name>long</name></type> <name>cal</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>,<parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>)</parameter_list>
<block>{
    <decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>ret</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>ret</name><operator>=</operator><name><name>p</name><index>[<expr><name>x</name></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name>ret</name><operator>*=</operator><name><name>q</name><index>[<expr><name>x</name><operator>-</operator><name>y</name></expr>]</index></name></expr>;</expr_stmt>
    <if>if<condition>(<expr><name>ret</name><operator>&gt;=</operator><name>pr</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>ret</name><operator>%=</operator><name>pr</name></expr>;</expr_stmt></block></then></if>
    <expr_stmt><expr><name>ret</name><operator>*=</operator><name><name>q</name><index>[<expr><name>y</name></expr>]</index></name></expr>;</expr_stmt>
    <if>if<condition>(<expr><name>ret</name><operator>&gt;=</operator><name>pr</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>ret</name><operator>%=</operator><name>pr</name></expr>;</expr_stmt></block></then></if>
    <return>return <expr><name>ret</name></expr>;</return>
}</block></function>
<function><type><name>bool</name></type> <name>cmp</name><parameter_list>(<parameter><decl><type><name>node</name></type> <name>n1</name></decl></parameter>,<parameter><decl><type><name>node</name></type> <name>n2</name></decl></parameter>)</parameter_list>
<block>{
    <if>if<condition>(<expr><name><name>n1</name><operator>.</operator><name>x</name></name><operator>!=</operator><name><name>n2</name><operator>.</operator><name>x</name></name></expr>)</condition><then> <block type="pseudo"><return>return <expr><name><name>n1</name><operator>.</operator><name>x</name></name><operator>&lt;</operator><name><name>n2</name><operator>.</operator><name>x</name></name></expr>;</return></block></then></if>
    <return>return <expr><name><name>n1</name><operator>.</operator><name>y</name></name><operator>&lt;</operator><name><name>n2</name><operator>.</operator><name>y</name></name></expr>;</return>
}</block></function>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
    <expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d%d%d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>h</name></expr></argument>,<argument><expr><operator>&amp;</operator><name>w</name></expr></argument>,<argument><expr><operator>&amp;</operator><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>p</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>=</operator><literal type="number">1LL</literal></expr>;</expr_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>h</name><operator>+</operator><name>w</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
    <block>{
        <expr_stmt><expr><name><name>p</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><name><name>p</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>*</operator><operator>(</operator><name>long</name> <name>long</name><operator>)</operator><name>i</name></expr>;</expr_stmt>
        <if>if<condition>(<expr><name><name>p</name><index>[<expr><name>i</name></expr>]</index></name><operator>&gt;=</operator><name>pr</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name><name>p</name><index>[<expr><name>i</name></expr>]</index></name><operator>%=</operator><name>pr</name></expr>;</expr_stmt></block></then></if>
    }</block></for>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>h</name><operator>+</operator><name>w</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
    <block>{
        <expr_stmt><expr><name><name>q</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><call><name>quick</name><argument_list>(<argument><expr><name><name>p</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>,<argument><expr><name>pr</name><operator>-</operator><literal type="number">2LL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if>if<condition>(<expr><name><name>q</name><index>[<expr><name>i</name></expr>]</index></name><operator>&gt;=</operator><name>pr</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name><name>q</name><index>[<expr><name>i</name></expr>]</index></name><operator>%=</operator><name>pr</name></expr>;</expr_stmt></block></then></if>
    }</block></for>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
        <block type="pseudo"><expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d%d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>x</name></expr></argument>,<argument><expr><operator>&amp;</operator><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></for>
    <expr_stmt><expr><call><name>sort</name><argument_list>(<argument><expr><name>s</name></expr></argument>,<argument><expr><name>s</name><operator>+</operator><name>n</name></expr></argument>,<argument><expr><name>cmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
    <block>{
        <expr_stmt><expr><name><name>f</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><call><name>cal</name><argument_list>(<argument><expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>x</name><operator>+</operator><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>y</name><operator>-</operator><literal type="number">2</literal></expr></argument>,<argument><expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>x</name><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <for>for<control>(<init><decl><type><name>int</name></type> <name>j</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>j</name><operator>&lt;</operator><name>i</name></expr>;</condition><incr><expr><name>j</name><operator>++</operator></expr></incr>)</control>
            <block type="pseudo"><if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>x</name><operator>&gt;=</operator><name><name>s</name><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>x</name><operator>&amp;&amp;</operator><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>y</name><operator>&gt;=</operator><name><name>s</name><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>y</name></expr>)</condition><then>
            <block>{
                <decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>tmp</name><init>=<expr><name><name>f</name><index>[<expr><name>j</name></expr>]</index></name><operator>*</operator><call><name>cal</name><argument_list>(<argument><expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>x</name><operator>-</operator><name><name>s</name><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>x</name><operator>+</operator><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>y</name><operator>-</operator><name><name>s</name><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>y</name></expr></argument>,<argument><expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>x</name><operator>-</operator><name><name>s</name><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>x</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if>if<condition>(<expr><name>tmp</name><operator>&gt;=</operator><name>pr</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>tmp</name><operator>%=</operator><name>pr</name></expr>;</expr_stmt></block></then></if>
                <expr_stmt><expr><name><name>f</name><index>[<expr><name>i</name></expr>]</index></name><operator>-=</operator><name>tmp</name></expr>;</expr_stmt>
                <if>if<condition>(<expr><name><name>f</name><index>[<expr><name>i</name></expr>]</index></name><operator>&lt;</operator><literal type="number">0</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name><name>f</name><index>[<expr><name>i</name></expr>]</index></name><operator>+=</operator><name>pr</name></expr>;</expr_stmt></block></then></if>
            }</block></then></if></block></for>
    }</block></for>
  <comment type="line">//  cout&lt;&lt;f[0]&lt;&lt;" "&lt;&lt;f[1]&lt;&lt;" "&lt;&lt;f[2]&lt;&lt;endl;</comment>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><name>n</name><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&gt;=</operator><literal type="number">0</literal></expr>;</condition><incr><expr><name>i</name><operator>--</operator></expr></incr>)</control>
    <block>{
        <expr_stmt><expr><name><name>g</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><call><name>cal</name><argument_list>(<argument><expr><name>w</name><operator>+</operator><name>h</name><operator>-</operator><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>x</name><operator>-</operator><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>y</name></expr></argument>,<argument><expr><name>h</name><operator>-</operator><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <comment type="block">/*   for(int j=n-1;j&gt;i;j--)
            if(s[i].x&lt;=s[j].x&amp;&amp;s[i].y&lt;=s[j].y)
            {
                g[i]-=g[j];
                if(g[i]&lt;0) g[i]+=pr;
            }*/</comment>
    }</block></for>
   <comment type="line">// cout&lt;&lt;g[0]&lt;&lt;" "&lt;&lt;g[1]&lt;&lt;" "&lt;&lt;g[2]&lt;&lt;endl;</comment>
    <expr_stmt><expr><name>ans</name><operator>=</operator><call><name>cal</name><argument_list>(<argument><expr><name>w</name><operator>+</operator><name>h</name><operator>-</operator><literal type="number">2</literal></expr></argument>,<argument><expr><name>w</name><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
    <block>{
        <decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>tmp</name><init>=<expr><name><name>f</name><index>[<expr><name>i</name></expr>]</index></name><operator>*</operator><name><name>g</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name>tmp</name><operator>%=</operator><name>pr</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>ans</name><operator>-=</operator><name>tmp</name></expr>;</expr_stmt>
        <if>if<condition>(<expr><name>ans</name><operator>&lt;</operator><literal type="number">0</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>ans</name><operator>+=</operator><name>pr</name></expr>;</expr_stmt></block></then></if>
    }</block></for>
    <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>ans</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
