<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="cpp/12519366.cpp"><comment type="line">//Language: GNU C++</comment>


<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;iostream&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<function><type><name>int</name></type> <name>h</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>n</name></decl></parameter>)</parameter_list><block>{
	<if>if<condition>(<expr><name>n</name><operator>==</operator><literal type="number">2</literal></expr>)</condition><then><block>{
		<return>return <expr><literal type="number">1</literal></expr>;</return>
	}</block></then></if>
	<if>if<condition>(<expr><name>n</name><operator>&lt;</operator><literal type="number">2</literal></expr>)</condition><then><block>{
		<return>return <expr><literal type="number">0</literal></expr>;</return>
	}</block></then>
	<else>else <block type="pseudo"><return>return <expr><call><name>h</name><argument_list>(<argument><expr><name>n</name><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call><operator>+</operator><literal type="number">1</literal></expr>;</return></block></else></if>
}</block></function>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
	<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>m</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name> <operator>&gt;&gt;</operator><name>m</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>string</name></type> <name>s</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>s</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>initcount</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>currmax</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name><operator>-</operator><literal type="number">1</literal></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
			<if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>!=</operator><literal type="char">'.'</literal></expr>)</condition><then><block>{
				<expr_stmt><expr><name>initcount</name><operator>+=</operator><call><name>h</name><argument_list>(<argument><expr><name>currmax</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<comment type="line">//cout &lt;&lt; i &lt;&lt; " " &lt;&lt; currmax &lt;&lt; " " &lt;&lt; h(currmax) &lt;&lt; endl;</comment>
				<expr_stmt><expr><name>currmax</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
				<continue>continue;</continue>
			}</block></then>
			<else>else<block>{
				<if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name><operator>==</operator><literal type="char">'.'</literal></expr>)</condition><then><block>{
					<if>if<condition>(<expr><name>currmax</name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then><block>{
						<expr_stmt><expr><name>currmax</name><operator>=</operator><literal type="number">2</literal></expr>;</expr_stmt>
					}</block></then>
					<else>else<block>{
						<expr_stmt><expr><name>currmax</name><operator>++</operator></expr>;</expr_stmt>
					}</block></else></if>
					<comment type="line">//cout &lt;&lt; i &lt;&lt; " "&lt;&lt; currmax&lt;&lt; endl;</comment>
				}</block></then></if>
			}</block></else></if>
		}</block></for>
	<expr_stmt><expr><name>initcount</name> <operator>+=</operator> <call><name>h</name><argument_list>(<argument><expr><name>currmax</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<comment type="line">//cout &lt;&lt; initcount &lt;&lt; endl;</comment>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>it</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>it</name><operator>&lt;</operator><name>m</name></expr>;</condition><incr><expr><name>it</name><operator>++</operator></expr></incr>)</control><block>{
		<decl_stmt><decl><type><name>int</name></type> <name>x</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name>char</name></type> <name>y</name></decl>;</decl_stmt>
		<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>x</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>y</name></expr>;</expr_stmt>
		<if>if<condition>(<expr><name>n</name><operator>&gt;</operator><literal type="number">1</literal></expr>)</condition><then><block>{
			<if>if<condition>(<expr><name>x</name><operator>==</operator><literal type="number">1</literal></expr>)</condition><then><block>{
				<if>if<condition>(<expr><name><name>s</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>==</operator><literal type="char">'.'</literal></expr>)</condition><then><block>{
					<if>if<condition>(<expr><name>y</name><operator>==</operator><literal type="char">'.'</literal></expr>)</condition><then><block>{
						<if>if<condition>(<expr><name><name>s</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>!=</operator><literal type="char">'.'</literal></expr>)</condition><then><block>{
							<expr_stmt><expr><name>initcount</name><operator>+=</operator><literal type="number">1</literal></expr>;</expr_stmt>
						}</block></then></if>
						<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>initcount</name> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
					}</block></then>
					<else>else<block>{
						<if>if<condition>(<expr><name><name>s</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>==</operator><literal type="char">'.'</literal></expr>)</condition><then><block>{
							<expr_stmt><expr><name>initcount</name><operator>-=</operator><literal type="number">1</literal></expr>;</expr_stmt>
						}</block></then></if>
						<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>initcount</name> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
					}</block></else></if>
				}</block></then>
				<else>else<block>{
					<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator><name>initcount</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
				}</block></else></if>
			}</block></then>
			<elseif>else <if>if<condition>(<expr><name>x</name><operator>&lt;</operator><call><name><name>s</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call></expr>)</condition><then><block>{
				<if>if<condition>(<expr><name><name>s</name><index>[<expr><name>x</name><operator>-</operator><literal type="number">2</literal></expr>]</index></name><operator>==</operator><literal type="char">'.'</literal> <operator>&amp;&amp;</operator> <name><name>s</name><index>[<expr><name>x</name></expr>]</index></name><operator>==</operator><literal type="char">'.'</literal></expr>)</condition><then><block>{
					<comment type="line">//ut &lt;&lt; "step1" &lt;&lt; endl;</comment>
					<if>if<condition>(<expr><name>y</name><operator>==</operator><literal type="char">'.'</literal></expr>)</condition><then><block>{
						<if>if<condition>(<expr><name><name>s</name><index>[<expr><name>x</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>!=</operator><literal type="char">'.'</literal></expr>)</condition><then><block>{
							<expr_stmt><expr><name>initcount</name><operator>+=</operator><literal type="number">2</literal></expr>;</expr_stmt>
						}</block></then></if>
						<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>initcount</name> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
					}</block></then>
					<else>else<block>{
						<if>if<condition>(<expr><name><name>s</name><index>[<expr><name>x</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>==</operator><literal type="char">'.'</literal></expr>)</condition><then><block>{
							<expr_stmt><expr><name>initcount</name><operator>-=</operator><literal type="number">2</literal></expr>;</expr_stmt>
						}</block></then></if>
						<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>initcount</name> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
					}</block></else></if>
				}</block></then>
				<elseif>else <if>if<condition>(<expr><name><name>s</name><index>[<expr><name>x</name><operator>-</operator><literal type="number">2</literal></expr>]</index></name><operator>==</operator><literal type="char">'.'</literal> <operator>||</operator>  <name><name>s</name><index>[<expr><name>x</name></expr>]</index></name><operator>==</operator><literal type="char">'.'</literal></expr>)</condition><then><block>{
					<if>if<condition>(<expr><name>y</name><operator>==</operator><literal type="char">'.'</literal></expr>)</condition><then><block>{
						<if>if<condition>(<expr><name><name>s</name><index>[<expr><name>x</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>!=</operator><literal type="char">'.'</literal></expr>)</condition><then><block>{
							<expr_stmt><expr><name>initcount</name><operator>+=</operator><literal type="number">1</literal></expr>;</expr_stmt>
						}</block></then></if>
						<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>initcount</name> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
					}</block></then>
					<else>else<block>{
						<if>if<condition>(<expr><name><name>s</name><index>[<expr><name>x</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>==</operator><literal type="char">'.'</literal></expr>)</condition><then><block>{
							<expr_stmt><expr><name>initcount</name><operator>-=</operator><literal type="number">1</literal></expr>;</expr_stmt>
						}</block></then></if>
						<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>initcount</name> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
					}</block></else></if>
				}</block></then></if></elseif>
				<else>else<block>{
					<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>initcount</name> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
				}</block></else></if>
			}</block></then></if></elseif></if>
			<if>if<condition>(<expr><name>x</name><operator>==</operator><call><name><name>s</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call></expr>)</condition><then><block>{
				<if>if<condition>(<expr><name><name>s</name><index>[<expr><call><name><name>s</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call><operator>-</operator><literal type="number">2</literal></expr>]</index></name><operator>==</operator><literal type="char">'.'</literal></expr>)</condition><then><block>{
					<if>if<condition>(<expr><name>y</name><operator>==</operator><literal type="char">'.'</literal></expr>)</condition><then><block>{
						<if>if<condition>(<expr><name><name>s</name><index>[<expr><call><name><name>s</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>!=</operator><literal type="char">'.'</literal></expr>)</condition><then><block>{
							<expr_stmt><expr><name>initcount</name><operator>+=</operator><literal type="number">1</literal></expr>;</expr_stmt>
						}</block></then></if>
						<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>initcount</name> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
					}</block></then>
					<else>else<block>{
						<if>if<condition>(<expr><name><name>s</name><index>[<expr><call><name><name>s</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>==</operator><literal type="char">'.'</literal></expr>)</condition><then><block>{
							<expr_stmt><expr><name>initcount</name><operator>-=</operator><literal type="number">1</literal></expr>;</expr_stmt>
						}</block></then></if>
						<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>initcount</name> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
					}</block></else></if>
				}</block></then>
				<else>else<block>{
					<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>initcount</name> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
				}</block></else></if>
			}</block></then></if>
		}</block></then></if>
		<if>if<condition>(<expr><name>n</name><operator>==</operator><literal type="number">1</literal></expr>)</condition><then><block>{
			<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="number">0</literal> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
		}</block></then></if>
		
		<expr_stmt><expr><name><name>s</name><index>[<expr><name>x</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>=</operator><name>y</name></expr>;</expr_stmt>
		<comment type="line">//cout &lt;&lt; s &lt;&lt; endl; </comment>

		<comment type="line">// int currmax=0;</comment>
		<comment type="line">// for(int i=0;i&lt;n-1;i++){</comment>
		<comment type="line">// 	if(s[i]!='.'){</comment>
		<comment type="line">// 		count+=h(currmax);</comment>
		<comment type="line">// 		//cout &lt;&lt; i &lt;&lt; " " &lt;&lt; currmax &lt;&lt; " " &lt;&lt; h(currmax) &lt;&lt; endl;</comment>
		<comment type="line">// 		currmax = 0;</comment>
		<comment type="line">// 		continue;</comment>
		<comment type="line">// 	}</comment>
		<comment type="line">// 	else{</comment>
		<comment type="line">// 		if(s[i+1]=='.'){</comment>
		<comment type="line">// 			if(currmax==0){</comment>
		<comment type="line">// 				currmax=2;</comment>
		<comment type="line">// 			}</comment>
		<comment type="line">// 			else{</comment>
		<comment type="line">// 				currmax++;</comment>
		<comment type="line">// 			}</comment>
		<comment type="line">// 			//cout &lt;&lt; i &lt;&lt; " "&lt;&lt; currmax&lt;&lt; endl;</comment>
		<comment type="line">// 		}</comment>
		<comment type="line">// 	}</comment>
		<comment type="line">// }</comment>
		<comment type="line">//cout &lt;&lt; count +h(currmax)&lt;&lt; endl;</comment>
	}</block></for>
	
}</block></function></unit>
