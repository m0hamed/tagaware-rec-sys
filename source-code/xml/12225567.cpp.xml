<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="cpp/12225567.cpp"><comment type="line">//Language: GNU C++</comment>


<comment type="line">//In the Name of God</comment>

<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;vector&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ll</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>

<using>using <namespace>namespace <name>std</name>;</namespace></using>

<decl_stmt><decl><type><specifier>const</specifier> <name>ll</name></type> <name>M</name><init>=<expr><literal type="number">1e9</literal><operator>+</operator><literal type="number">7</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ll</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>x</name></decl>,<decl><type ref="prev"/><name>y</name></decl>,<decl><type ref="prev"/><name>h</name></decl>,<decl><type ref="prev"/><name>w</name></decl>,<decl><type ref="prev"/><name><name>f</name><index>[<expr><literal type="number">200200</literal></expr>]</index></name></decl>,<decl><type ref="prev"/><name><name>P</name><index>[<expr><literal type="number">200200</literal></expr>]</index></name></decl>,<decl><type ref="prev"/><name><name>a</name><index>[<expr><literal type="number">2020</literal></expr>]</index></name></decl>,<decl><type ref="prev"/><name>ret</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name><name>pair</name><argument_list type="generic">&lt;<argument><expr><name>ll</name></expr></argument>,<argument><expr><name>ll</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name></type> <name>v</name></decl>;</decl_stmt>

<function><type><name>ll</name></type> <name>p</name><parameter_list>(<parameter><decl><type><name>ll</name></type> <name>b</name></decl></parameter>,<parameter><decl><type><name>ll</name></type> <name>k</name></decl></parameter>)</parameter_list>
<block>{
  <if>if<condition>(<expr><name>k</name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then>
    <block type="pseudo"><return>return <expr><literal type="number">1</literal></expr>;</return></block></then></if>
  <expr_stmt><expr><name>ret</name><operator>=</operator><call><name>p</name><argument_list>(<argument><expr><name>b</name></expr></argument>,<argument><expr><name>k</name><operator>/</operator><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <if>if<condition>(<expr><name>k</name><operator>%</operator><literal type="number">2</literal></expr>)</condition><then>
    <block>{
      <return>return <expr><operator>(</operator><operator>(</operator><operator>(</operator><name>ret</name><operator>*</operator><name>ret</name><operator>)</operator><operator>%</operator><name>M</name><operator>)</operator><operator>*</operator><name>b</name><operator>)</operator><operator>%</operator><name>M</name></expr>;</return>
    }</block></then></if>
  <return>return <expr><operator>(</operator><name>ret</name><operator>*</operator><name>ret</name><operator>)</operator><operator>%</operator><name>M</name></expr>;</return>
}</block></function>

<function><type><name>ll</name></type> <name>c</name><parameter_list>(<parameter><decl><type><name>ll</name></type> <name>i</name></decl></parameter>,<parameter><decl><type><name>ll</name></type> <name>j</name></decl></parameter>)</parameter_list>
<block>{
  <return>return <expr><operator>(</operator><operator>(</operator><operator>(</operator><name><name>f</name><index>[<expr><name>i</name></expr>]</index></name><operator>*</operator><name><name>P</name><index>[<expr><name>j</name></expr>]</index></name><operator>)</operator><operator>%</operator><name>M</name><operator>)</operator><operator>*</operator><name><name>P</name><index>[<expr><name>i</name><operator>-</operator><name>j</name></expr>]</index></name><operator>)</operator><operator>%</operator><name>M</name></expr>;</return>
}</block></function>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
  <for>for<control>(<init><expr><name><name>f</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>=</operator><literal type="number">1</literal></expr><operator>,</operator><expr><name>n</name><operator>=</operator><literal type="number">1</literal></expr>;</init><condition><expr><name>n</name><operator>&lt;=</operator><literal type="number">200010</literal></expr>;</condition><incr><expr><name><name>f</name><index>[<expr><name>n</name></expr>]</index></name><operator>=</operator><operator>(</operator><name><name>f</name><index>[<expr><name>n</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>*</operator><name>n</name><operator>)</operator><operator>%</operator><name>M</name></expr><operator>,</operator><expr><name>n</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><empty_stmt>;</empty_stmt></block></for>
  <for>for<control>(<init><expr><name>n</name><operator>=</operator><literal type="number">0</literal></expr>;</init><condition><expr><name>n</name><operator>&lt;=</operator><literal type="number">200010</literal></expr>;</condition><incr><expr><name><name>P</name><index>[<expr><name>n</name></expr>]</index></name><operator>=</operator><call><name>p</name><argument_list>(<argument><expr><name><name>f</name><index>[<expr><name>n</name></expr>]</index></name></expr></argument>,<argument><expr><name>M</name><operator>-</operator><literal type="number">2</literal></expr></argument>)</argument_list></call></expr><operator>,</operator><expr><name>n</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><empty_stmt>;</empty_stmt></block></for>
  <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>h</name><operator>&gt;&gt;</operator><name>w</name><operator>&gt;&gt;</operator><name>n</name></expr>;</expr_stmt>
  <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
    <block>{
      <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>x</name><operator>&gt;&gt;</operator><name>y</name></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>v</name><operator>.</operator><name>push_back</name></name><argument_list>(<argument><expr><call><name>make_pair</name><argument_list>(<argument><expr><name>x</name></expr></argument>,<argument><expr><name>y</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></for>
  <expr_stmt><expr><call><name><name>v</name><operator>.</operator><name>push_back</name></name><argument_list>(<argument><expr><call><name>make_pair</name><argument_list>(<argument><expr><name>h</name></expr></argument>,<argument><expr><name>w</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>sort</name><argument_list>(<argument><expr><call><name><name>v</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>,<argument><expr><call><name><name>v</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
    <block>{
      <expr_stmt><expr><name>x</name><operator>=</operator><name><name>v</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>first</name></expr>;</expr_stmt>
      <expr_stmt><expr><name>y</name><operator>=</operator><name><name>v</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>second</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><call><name>c</name><argument_list>(<argument><expr><name>x</name><operator>+</operator><name>y</name><operator>-</operator><literal type="number">2</literal></expr></argument>,<argument><expr><name>x</name><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <for>for<control>(<init><decl><type><name>int</name></type> <name>j</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>j</name><operator>&lt;</operator><name>i</name></expr>;</condition><incr><expr><name>j</name><operator>++</operator></expr></incr>)</control>
	<block type="pseudo"><if>if<condition>(<expr><name><name>v</name><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>first</name><operator>&lt;=</operator><name>x</name> <operator>&amp;&amp;</operator> <name><name>v</name><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>second</name><operator>&lt;=</operator><name>y</name></expr>)</condition><then>
	  <block>{
	    <expr_stmt><expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name><operator>-=</operator><operator>(</operator><name><name>a</name><index>[<expr><name>j</name></expr>]</index></name><operator>*</operator><call><name>c</name><argument_list>(<argument><expr><name>x</name><operator>-</operator><name><name>v</name><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>first</name><operator>+</operator><name>y</name><operator>-</operator><name><name>v</name><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>second</name></expr></argument>,<argument><expr><name>x</name><operator>-</operator><name><name>v</name><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>first</name></expr></argument>)</argument_list></call><operator>)</operator></expr>;</expr_stmt>
	    <expr_stmt><expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><operator>(</operator><operator>(</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><name>M</name><operator>)</operator><operator>+</operator><name>M</name><operator>)</operator><operator>%</operator><name>M</name></expr>;</expr_stmt>
	  }</block></then></if></block></for>
    }</block></for>
  <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name><name>a</name><index>[<expr><name>n</name></expr>]</index></name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
  <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
