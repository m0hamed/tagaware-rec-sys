<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="cpp/12175967.cpp"><comment type="line">//Language: GNU C++11</comment>


<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;algorithm&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><name>int</name></type> <name><name>v</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
    <comment type="line">//freopen("std.in","r",stdin);</comment>
    <comment type="line">//freopen("std.out","w",stdout);</comment>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><literal type="number">6</literal></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
        <block type="pseudo"><expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name><name>v</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></for>
    <decl_stmt><decl><type><name>int</name></type> <name>add</name><init>=<expr><literal type="number">2</literal><operator>*</operator><name><name>v</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>+</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>res</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><call><name>min</name><argument_list>(<argument><expr><name><name>v</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>,<argument><expr><name><name>v</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <expr_stmt><expr><name>res</name><operator>=</operator><name>res</name><operator>+</operator><name>add</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>add</name><operator>+=</operator><literal type="number">2</literal></expr>;</expr_stmt>
    }</block></for>
    <expr_stmt><expr><name>add</name><operator>--</operator></expr>;</expr_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><call><name>min</name><argument_list>(<argument><expr><name><name>v</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>,<argument><expr><name><name>v</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>+</operator><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name><name>v</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>+</operator><name><name>v</name><index>[<expr><literal type="number">3</literal></expr>]</index></name><operator>-</operator><call><name>min</name><argument_list>(<argument><expr><name><name>v</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr></argument>,<argument><expr><name><name>v</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
        <block type="pseudo"><expr_stmt><expr><name>res</name><operator>+=</operator><name>add</name></expr>;</expr_stmt></block></for>
    <expr_stmt><expr><name>add</name><operator>--</operator></expr>;</expr_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><name><name>v</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>+</operator><name><name>v</name><index>[<expr><literal type="number">3</literal></expr>]</index></name><operator>-</operator><call><name>min</name><argument_list>(<argument><expr><name><name>v</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr></argument>,<argument><expr><name><name>v</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>+</operator><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name><name>v</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>+</operator><name><name>v</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <expr_stmt><expr><name>res</name><operator>+=</operator><name>add</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>add</name><operator>-=</operator><literal type="number">2</literal></expr>;</expr_stmt>
    }</block></for>
    <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%I64d"</literal></expr></argument>,<argument><expr><name>res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
