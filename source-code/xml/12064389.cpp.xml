<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="cpp/12064389.cpp"><comment type="line">//Language: GNU C++11</comment>


<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;cstdlib&gt;</cpp:file></cpp:include>

 <using>using <namespace>namespace <name>std</name>;</namespace></using>

<decl_stmt><decl><type><name>int</name></type> <name>a</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>pair</name><argument_list type="generic">&lt; <argument><expr><name>int</name></expr></argument> ,<argument><expr><name><name>pair</name><argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>,<argument><expr><name>int</name></expr></argument> &gt;</argument_list></name></expr></argument> &gt;</argument_list></name></type> <name><name>x</name><index>[<expr><literal type="number">1000005</literal></expr>]</index></name></decl>;</decl_stmt>
 <function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
 <block>{
  <decl_stmt><decl><type><name>int</name></type> <name>n</name></decl> ;</decl_stmt>
  <decl_stmt><decl><type><name>int</name></type> <name>i</name></decl> , <decl><type ref="prev"/><name>j</name></decl> , <decl><type ref="prev"/><name>max</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <for>for<control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">1</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{ <expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                          <if>if<condition>(<expr><name><name>x</name><index>[<expr><name>a</name></expr>]</index></name><operator>.</operator><name>first</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name><name>x</name><index>[<expr><name>a</name></expr>]</index></name><operator>.</operator><name><name>second</name><operator>.</operator><name>first</name></name> <operator>=</operator> <name>i</name></expr>;</expr_stmt></block></then></if>
                          <expr_stmt><expr><name><name>x</name><index>[<expr><name>a</name></expr>]</index></name><operator>.</operator><name><name>second</name><operator>.</operator><name>second</name></name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>
                          <expr_stmt><expr><name><name>x</name><index>[<expr><name>a</name></expr>]</index></name><operator>.</operator><name>first</name> <operator>++</operator></expr>;</expr_stmt>
                          <if>if<condition>(<expr><name><name>x</name><index>[<expr><name>a</name></expr>]</index></name><operator>.</operator><name>first</name> <operator>&gt;</operator> <name>max</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>max</name> <operator>=</operator> <name><name>x</name><index>[<expr><name>a</name></expr>]</index></name><operator>.</operator><name>first</name></expr>;</expr_stmt></block></then></if>
                         }</block></for>
<decl_stmt><decl><type><name>int</name></type> <name>min</name> <init>= <expr><literal type="number">1000000</literal></expr></init></decl> , <decl><type ref="prev"/><name>t</name></decl> , <decl><type ref="prev"/><name>k</name></decl>;</decl_stmt>
 <for>for<control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">1</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <literal type="number">1000000</literal></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
     <if>if<condition>(<expr><name><name>x</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>first</name> <operator>==</operator> <name>max</name> <operator>&amp;&amp;</operator> <name><name>x</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name><name>second</name><operator>.</operator><name>second</name></name> <operator>-</operator> <name><name>x</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name><name>second</name><operator>.</operator><name>first</name></name> <operator>&lt;</operator> <name>min</name></expr>)</condition><then> <block>{
             <expr_stmt><expr><name>min</name> <operator>=</operator> <name><name>x</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name><name>second</name><operator>.</operator><name>second</name></name> <operator>-</operator> <name><name>x</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name><name>second</name><operator>.</operator><name>first</name></name></expr>;</expr_stmt>
             <expr_stmt><expr><name>t</name> <operator>=</operator> <name><name>x</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name><name>second</name><operator>.</operator><name>first</name></name></expr>;</expr_stmt>
             <expr_stmt><expr><name>k</name> <operator>=</operator> <name><name>x</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name><name>second</name><operator>.</operator><name>second</name></name></expr>;</expr_stmt>
            }</block></then></if>
   }</block></for>
 <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%d %d"</literal></expr></argument>,<argument><expr><name>t</name></expr></argument>, <argument><expr><name>k</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 }</block></function></unit>
