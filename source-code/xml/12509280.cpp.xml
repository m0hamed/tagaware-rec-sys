<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="cpp/12509280.cpp"><comment type="line">//Language: GNU C++</comment>


<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;cstdio&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>

<decl_stmt><decl><type><name>string</name></type> <name>a</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>, <decl><type ref="prev"/><name>m</name></decl>, <decl><type ref="prev"/><name>s</name></decl>, <decl><type ref="prev"/><name>num</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name><name>b</name><index>[<expr><literal type="number">300005</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name>c</name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
	<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>
<comment type="line">//	freopen ("input.txt", "r", stdin);</comment>
	<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name> <operator>&gt;&gt;</operator> <name>m</name></expr>;</expr_stmt>
	<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>a</name></expr>;</expr_stmt>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name> <operator>-</operator> <literal type="number">1</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{
		<if>if <condition>(<expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <literal type="char">'.'</literal> <operator>&amp;&amp;</operator> <name><name>a</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'.'</literal></expr>)</condition><then> <block>{
			<expr_stmt><expr><name><name>b</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
			<expr_stmt><expr><name>s</name><operator>++</operator></expr>;</expr_stmt>
		}</block></then></if>
	}</block></for>

	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>m</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{
		<expr_stmt><expr><call><name>scanf</name> <argument_list>(<argument><expr><literal type="string">"%d %c"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>num</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>num</name><operator>--</operator></expr>;</expr_stmt>
		<if>if <condition>(<expr><name><name>a</name><index>[<expr><name>num</name></expr>]</index></name> <operator>!=</operator> <literal type="char">'.'</literal> <operator>&amp;&amp;</operator> <name>c</name> <operator>==</operator> <literal type="char">'.'</literal></expr>)</condition><then> <block>{
			<if>if <condition>(<expr><name>num</name> <operator>&gt;=</operator> <literal type="number">1</literal> <operator>&amp;&amp;</operator> <name><name>a</name><index>[<expr><name>num</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'.'</literal> <operator>&amp;&amp;</operator> <operator>!</operator><name><name>b</name><index>[<expr><name>num</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr>)</condition><then> <block>{
				<expr_stmt><expr><name><name>b</name><index>[<expr><name>num</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
				<expr_stmt><expr><name>s</name><operator>++</operator></expr>;</expr_stmt>
			}</block></then></if>
			<if>if <condition>(<expr><name><name>a</name><index>[<expr><name>num</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'.'</literal> <operator>&amp;&amp;</operator> <operator>!</operator><name><name>b</name><index>[<expr><name>num</name></expr>]</index></name></expr>)</condition><then> <block>{
				<expr_stmt><expr><name><name>b</name><index>[<expr><name>num</name></expr>]</index></name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
				<expr_stmt><expr><name>s</name><operator>++</operator></expr>;</expr_stmt>
			}</block></then></if>
		}</block></then></if>
		<if>if <condition>(<expr><name><name>a</name><index>[<expr><name>num</name></expr>]</index></name> <operator>==</operator> <literal type="char">'.'</literal> <operator>&amp;&amp;</operator> <name>c</name> <operator>!=</operator> <literal type="char">'.'</literal></expr>)</condition><then> <block>{
			<if>if <condition>(<expr><name>num</name> <operator>&gt;=</operator> <literal type="number">1</literal> <operator>&amp;&amp;</operator> <name><name>a</name><index>[<expr><name>num</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'.'</literal> <operator>&amp;&amp;</operator> <name><name>b</name><index>[<expr><name>num</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr>)</condition><then> <block>{
				<expr_stmt><expr><name><name>b</name><index>[<expr><name>num</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
				<expr_stmt><expr><name>s</name><operator>--</operator></expr>;</expr_stmt>
			}</block></then></if>
			<if>if <condition>(<expr><name><name>b</name><index>[<expr><name>num</name></expr>]</index></name></expr>)</condition><then> <block>{
				<expr_stmt><expr><name><name>b</name><index>[<expr><name>num</name></expr>]</index></name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
				<expr_stmt><expr><name>s</name><operator>--</operator></expr>;</expr_stmt>
			}</block></then></if>
		}</block></then></if>
		<expr_stmt><expr><name><name>a</name><index>[<expr><name>num</name></expr>]</index></name> <operator>=</operator> <name>c</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%d\n"</literal></expr></argument>, <argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
