<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="cpp/12405249.cpp"><comment type="line">//Language: GNU C++</comment>


<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ll</name></cpp:macro> <cpp:value>long long int</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INF</name></cpp:macro> <cpp:value>1e12</cpp:value></cpp:define>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
	<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>, <decl><type ref="prev"/><name><name>v</name><index>[<expr><literal type="number">100005</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name>minimo</name></decl>, <decl><type ref="prev"/><name>maximo</name></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>scanf</name><argument_list>( <argument><expr><literal type="string">"%d"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>n</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
	<for>for<control>( <init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>
		<block type="pseudo"><expr_stmt><expr><call><name>scanf</name><argument_list>( <argument><expr><literal type="string">"%d"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>v</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block></for>

	<for>for<control>( <init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control> <block>{
		<expr_stmt><expr><name>minimo</name> <operator>=</operator> <call><name>min</name><argument_list>( <argument><expr><operator>(</operator> <ternary><condition><expr><name>i</name><operator>+</operator><literal type="number">1</literal> <operator>&lt;</operator> <name>n</name></expr> ?</condition><then> <expr><call><name>abs</name><argument_list>( <argument><expr><name><name>v</name><index>[<expr><name>i</name></expr>]</index></name> <operator>-</operator> <name><name>v</name><index>[<expr><name>i</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr> </then><else>: <expr><name>INF</name></expr></else></ternary> <operator>)</operator></expr></argument>, <argument><expr><operator>(</operator> <ternary><condition><expr><name>i</name><operator>-</operator><literal type="number">1</literal> <operator>&gt;=</operator> <literal type="number">0</literal></expr> ?</condition><then> <expr><call><name>abs</name><argument_list>( <argument><expr><name><name>v</name><index>[<expr><name>i</name></expr>]</index></name> <operator>-</operator> <name><name>v</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr> </then><else>: <expr><name>INF</name></expr></else></ternary> <operator>)</operator></expr></argument> )</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>maximo</name> <operator>=</operator> <call><name>max</name><argument_list>( <argument><expr><call><name>abs</name><argument_list>( <argument><expr><name><name>v</name><index>[<expr><name>i</name></expr>]</index></name> <operator>-</operator> <name><name>v</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr></argument>, <argument><expr><call><name>abs</name><argument_list>( <argument><expr><name><name>v</name><index>[<expr><name>i</name></expr>]</index></name> <operator>-</operator> <name><name>v</name><index>[<expr><name>n</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>printf</name><argument_list>( <argument><expr><literal type="string">"%d %d\n"</literal></expr></argument>, <argument><expr><name>minimo</name></expr></argument>, <argument><expr><name>maximo</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
	}</block></for>

	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
