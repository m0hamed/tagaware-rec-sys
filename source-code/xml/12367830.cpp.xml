<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="cpp/12367830.cpp"><comment type="line">//Language: GNU C++</comment>


<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>

<using>using <namespace>namespace <name>std</name>;</namespace></using>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>lli</name></cpp:macro> <cpp:value>long long int</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Max</name></cpp:macro> <cpp:value>1000005</cpp:value></cpp:define>

<decl_stmt><decl><type><name>lli</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>k</name></decl>,<decl><type ref="prev"/><name><name>a</name><index>[<expr><name>Max</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>lli</name></type> <name><name>p</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">8000000</literal></expr>]</index></name></decl>,<decl><type ref="prev"/><name>ans</name></decl>,<decl><type ref="prev"/><name><name>r12</name><index>[<expr><literal type="number">8000000</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>map</name><argument_list type="generic">&lt;<argument><expr><name>lli</name></expr></argument>,<argument><expr><name>lli</name></expr></argument>&gt;</argument_list></name></type><name>mp</name></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
    <decl_stmt><decl><type><name>lli</name></type> <name>m</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>t0</name></decl>,<decl><type ref="prev"/><name>t1</name></decl>,<decl><type ref="prev"/><name>t2</name></decl>;</decl_stmt>
        <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name><operator>&gt;&gt;</operator><name>k</name></expr>;</expr_stmt>
        <for>for<control>(<init><decl><type><name>lli</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
        <block>{
            <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
        }</block></for>

        <for>for<control>(<init><decl><type><name>lli</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
        <block>{

            <if>if<condition>(<expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><operator>(</operator><name>k</name><operator>*</operator><name>k</name><operator>)</operator><operator>==</operator><literal type="number">0</literal></expr>)</condition><then><block>{
                <expr_stmt><expr><name>t2</name><operator>=</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name><operator>/</operator><operator>(</operator><name>k</name><operator>*</operator><name>k</name><operator>)</operator></expr>;</expr_stmt>
                <if>if<condition>(<expr><call><name><name>mp</name><operator>.</operator><name>find</name></name><argument_list>(<argument><expr><name>t2</name></expr></argument>)</argument_list></call><operator>==</operator><call><name><name>mp</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr>)</condition><then>
                <block>{
                    <expr_stmt><expr><name><name>mp</name><index>[<expr><name>t2</name></expr>]</index></name><operator>=</operator><name>m</name><operator>++</operator></expr>;</expr_stmt>
                }</block></then></if>
                <comment type="line">//r23[mp[t2]] = r12[mp[t2]]*p[2][mp[t2]];</comment>
                <expr_stmt><expr><name>ans</name> <operator>+=</operator> <name><name>r12</name><index>[<expr><name><name>mp</name><index>[<expr><name>t2</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>
            }</block></then></if>
            <if>if<condition>(<expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><name>k</name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then><block>{
                <expr_stmt><expr><name>t1</name><operator>=</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name><operator>/</operator><name>k</name></expr>;</expr_stmt>
                <if>if<condition>(<expr><call><name><name>mp</name><operator>.</operator><name>find</name></name><argument_list>(<argument><expr><name>t1</name></expr></argument>)</argument_list></call><operator>==</operator><call><name><name>mp</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr>)</condition><then>
                <block>{
                    <expr_stmt><expr><name><name>mp</name><index>[<expr><name>t1</name></expr>]</index></name><operator>=</operator><name>m</name><operator>++</operator></expr>;</expr_stmt>
                }</block></then></if>
                <expr_stmt><expr><name><name>r12</name><index>[<expr><name><name>mp</name><index>[<expr><name>t1</name></expr>]</index></name></expr>]</index></name> <operator>+=</operator> <name><name>p</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name><name>mp</name><index>[<expr><name>t1</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>
            }</block></then></if>
            
            <expr_stmt><expr><name>t0</name><operator>=</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
            <if>if<condition>(<expr><call><name><name>mp</name><operator>.</operator><name>find</name></name><argument_list>(<argument><expr><name>t0</name></expr></argument>)</argument_list></call><operator>==</operator><call><name><name>mp</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr>)</condition><then>
            <block>{
                <expr_stmt><expr><name><name>mp</name><index>[<expr><name>t0</name></expr>]</index></name><operator>=</operator><name>m</name><operator>++</operator></expr>;</expr_stmt>
            }</block></then></if>
            <expr_stmt><expr><name><name>p</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name><name>mp</name><index>[<expr><name>t0</name></expr>]</index></name></expr>]</index></name><operator>++</operator></expr>;</expr_stmt>
        
            

        }</block></for>
        <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>ans</name><operator>&lt;&lt;</operator><literal type="char">'\n'</literal></expr>;</expr_stmt>

        <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
