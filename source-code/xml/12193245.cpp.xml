<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="cpp/12193245.cpp"><comment type="line">//Language: GNU C++11</comment>


<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
    <decl_stmt><decl><type><name>int</name></type> <name>a</name></decl>,<decl><type ref="prev"/><name>b</name></decl>,<decl><type ref="prev"/><name>x</name></decl>,<decl><type ref="prev"/><name>y</name></decl>,<decl><type ref="prev"/><name>xx</name></decl>,<decl><type ref="prev"/><name>yy</name></decl>;</decl_stmt> <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>a</name><operator>&gt;&gt;</operator><name>b</name><operator>&gt;&gt;</operator><name>x</name><operator>&gt;&gt;</operator><name>y</name><operator>&gt;&gt;</operator><name>xx</name><operator>&gt;&gt;</operator><name>yy</name></expr>;</expr_stmt>
    <if>if <condition>(<expr><name>x</name><operator>&gt;</operator><name>y</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><call><name>swap</name><argument_list>(<argument><expr><name>x</name></expr></argument>,<argument><expr><name>y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></then></if>
    <if>if <condition>(<expr><name>xx</name><operator>&gt;</operator><name>yy</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><call><name>swap</name><argument_list>(<argument><expr><name>xx</name></expr></argument>,<argument><expr><name>yy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></then></if>
    <decl_stmt><decl><type><name>int</name></type> <name>ch</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <if>if <condition>(<expr><name>x</name><operator>+</operator><name>xx</name><operator>&lt;=</operator><name>a</name><operator>&amp;&amp;</operator><call><name>max</name><argument_list>(<argument><expr><name>y</name></expr></argument>,<argument><expr><name>yy</name></expr></argument>)</argument_list></call><operator>&lt;=</operator><name>b</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>ch</name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt></block></then></if>
    <if>if <condition>(<expr><name>y</name><operator>+</operator><name>yy</name><operator>&lt;=</operator><name>a</name><operator>&amp;&amp;</operator><call><name>max</name><argument_list>(<argument><expr><name>x</name></expr></argument>,<argument><expr><name>xx</name></expr></argument>)</argument_list></call><operator>&lt;=</operator><name>b</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>ch</name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt></block></then></if>
    <if>if <condition>(<expr><name>y</name><operator>+</operator><name>yy</name><operator>&lt;=</operator><name>b</name><operator>&amp;&amp;</operator><call><name>max</name><argument_list>(<argument><expr><name>x</name></expr></argument>,<argument><expr><name>xx</name></expr></argument>)</argument_list></call><operator>&lt;=</operator><name>a</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>ch</name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt></block></then></if>
    <if>if <condition>(<expr><name>x</name><operator>+</operator><name>xx</name><operator>&lt;=</operator><name>b</name><operator>&amp;&amp;</operator><call><name>max</name><argument_list>(<argument><expr><name>y</name></expr></argument>,<argument><expr><name>yy</name></expr></argument>)</argument_list></call><operator>&lt;=</operator><name>a</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>ch</name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt></block></then></if>
    <if>if <condition>(<expr><name>x</name><operator>+</operator><name>yy</name><operator>&lt;=</operator><name>a</name><operator>&amp;&amp;</operator><call><name>max</name><argument_list>(<argument><expr><name>y</name></expr></argument>,<argument><expr><name>xx</name></expr></argument>)</argument_list></call><operator>&lt;=</operator><name>b</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>ch</name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt></block></then></if>
    <if>if <condition>(<expr><name>xx</name><operator>+</operator><name>y</name><operator>&lt;=</operator><name>a</name><operator>&amp;&amp;</operator><call><name>max</name><argument_list>(<argument><expr><name>yy</name></expr></argument>,<argument><expr><name>x</name></expr></argument>)</argument_list></call><operator>&lt;=</operator><name>b</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>ch</name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt></block></then></if>
    <if>if <condition>(<expr><name>x</name><operator>+</operator><name>y</name><operator>&lt;=</operator><name>a</name><operator>&amp;&amp;</operator><call><name>max</name><argument_list>(<argument><expr><name>xx</name></expr></argument>,<argument><expr><name>yy</name></expr></argument>)</argument_list></call><operator>&lt;=</operator><name>b</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>ch</name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt></block></then></if>
    <if>if <condition>(<expr><name>xx</name><operator>+</operator><name>yy</name><operator>&lt;=</operator><name>a</name><operator>&amp;&amp;</operator><call><name>max</name><argument_list>(<argument><expr><name>x</name></expr></argument>,<argument><expr><name>y</name></expr></argument>)</argument_list></call><operator>&lt;=</operator><name>b</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>ch</name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt></block></then></if>
    <if>if <condition>(<expr><name>ch</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"YES"</literal><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt></block></then>
    <else>else <block type="pseudo"><expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"NO"</literal><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt></block></else></if>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
