<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="cpp/12069883.cpp"><comment type="line">//Language: GNU C++11</comment>


<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;algorithm&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>

<struct>struct <name>node</name>
<block>{<public type="default">
	<decl_stmt><decl><type><name>int</name></type> <name>pos</name></decl>,<decl><type ref="prev"/><name>app</name></decl>;</decl_stmt>
	<function type="operator"><type><name>bool</name></type> <name>operator <name>&lt;</name></name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>node</name></type> <name>a</name></decl></parameter>)</parameter_list> <specifier>const</specifier>
	<block>{
		<return>return <expr><name>pos</name> <operator>&lt;</operator> <name><name>a</name><operator>.</operator><name>pos</name></name></expr>;</return>
	}</block></function>
</public>}</block><decl><name><name>a</name><index>[<expr><literal type="number">110</literal></expr>]</index></name></decl>,<decl><type ref="prev"/><name><name>b</name><index>[<expr><literal type="number">110</literal></expr>]</index></name></decl>;</struct>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
	<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>ans1</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>ans2</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><operator>++</operator> <name>i</name></expr></incr>)</control>
	<block>{
		<decl_stmt><decl><type><name>int</name></type> <name>x</name></decl>,<decl><type ref="prev"/><name>y</name></decl>;</decl_stmt>
		<expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d%d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>x</name></expr></argument>,<argument><expr><operator>&amp;</operator><name>y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if>if <condition>(<expr><name>x</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><then>
		<block>{
			<expr_stmt><expr><name>x</name> <operator>=</operator> <operator>-</operator><name>x</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name>a</name><index>[<expr><name>ans1</name></expr>]</index></name><operator>.</operator><name>pos</name> <operator>=</operator> <name>x</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name>a</name><index>[<expr><name>ans1</name> <operator>++</operator></expr>]</index></name><operator>.</operator><name>app</name> <operator>=</operator> <name>y</name></expr>;</expr_stmt>
		}</block></then>
		<else>else
		<block>{
			<expr_stmt><expr><name><name>b</name><index>[<expr><name>ans2</name></expr>]</index></name><operator>.</operator><name>pos</name> <operator>=</operator> <name>x</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name>b</name><index>[<expr><name>ans2</name> <operator>++</operator></expr>]</index></name><operator>.</operator><name>app</name> <operator>=</operator> <name>y</name></expr>;</expr_stmt>
		}</block></else></if>
	}</block></for>
	<expr_stmt><expr><call><name>sort</name> <argument_list>(<argument><expr><name>a</name></expr></argument>,<argument><expr><name>a</name> <operator>+</operator> <name>ans1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>sort</name> <argument_list>(<argument><expr><name>b</name></expr></argument>,<argument><expr><name>b</name> <operator>+</operator> <name>ans2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>sum</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	<if>if <condition>(<expr><name>ans1</name> <operator>&gt;</operator> <name>ans2</name></expr>)</condition><then>
	<block>{
		<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name> <operator>&lt;=</operator> <name>ans2</name></expr>;</condition> <incr><expr><operator>++</operator> <name>i</name></expr></incr>)</control>
			<block type="pseudo"><expr_stmt><expr><name>sum</name> <operator>+=</operator> <name><name>a</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>app</name> <operator>+</operator> <name><name>b</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>app</name></expr>;</expr_stmt></block></for>
	}</block></then>
	<elseif>else <if>if <condition>(<expr><name>ans2</name> <operator>&gt;</operator> <name>ans1</name></expr>)</condition><then>
	<block>{
		<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name> <operator>&lt;=</operator> <name>ans1</name></expr>;</condition> <incr><expr><operator>++</operator> <name>i</name></expr></incr>)</control>
			<block type="pseudo"><expr_stmt><expr><name>sum</name> <operator>+=</operator> <name><name>a</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>app</name> <operator>+</operator> <name><name>b</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>app</name></expr>;</expr_stmt></block></for>
	}</block></then></if></elseif>
	<else>else
	<block>{
		<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name> <operator>&lt;</operator> <name>ans2</name></expr>;</condition> <incr><expr><operator>++</operator> <name>i</name></expr></incr>)</control>
			<block type="pseudo"><expr_stmt><expr><name>sum</name> <operator>+=</operator> <name><name>a</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>app</name> <operator>+</operator> <name><name>b</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>app</name></expr>;</expr_stmt></block></for>
	}</block></else></if>
	<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%d\n"</literal></expr></argument>,<argument><expr><name>sum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
