<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="cpp/12097115.cpp"><comment type="line">//Language: GNU C++</comment>


<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>

<using>using <namespace>namespace <name>std</name>;</namespace></using>

<decl_stmt><decl><type><name>long</name> <name>long</name> <name>int</name></type> <name><name>A</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">100005</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name><name>B</name><index>[<expr><literal type="number">100005</literal></expr>]</index></name></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
    <decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>i</name></decl>,<decl><type ref="prev"/><name>a</name></decl>,<decl><type ref="prev"/><name>te</name></decl>,<decl><type ref="prev"/><name>flag</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>ma</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name> <name>long</name> <name>int</name></type> <name>ans</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
    <block>{
        <expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name><name>B</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>A</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name><name>B</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name><operator>++</operator></expr>;</expr_stmt>
        <expr_stmt><expr><name>ma</name><operator>=</operator><call><name>max</name><argument_list>(<argument><expr><name><name>B</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>,<argument><expr><name>ma</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></for>
    <comment type="line">//printf("here");</comment>
    <for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
    <block>{
        <expr_stmt><expr><name>te</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name>a</name><operator>=</operator><name><name>B</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
        <while>while<condition>(<expr><literal type="number">2</literal><operator>*</operator><name>a</name><operator>&lt;=</operator><name>ma</name></expr>)</condition>
        <block>{
            <expr_stmt><expr><name>te</name><operator>++</operator></expr>;</expr_stmt>
            <expr_stmt><expr><name>a</name><operator>*=</operator><literal type="number">2</literal></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>A</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>a</name></expr>]</index></name><operator>++</operator></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>A</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>a</name></expr>]</index></name><operator>+=</operator><name>te</name></expr>;</expr_stmt>
        }</block></while>
        <expr_stmt><expr><name>a</name><operator>=</operator><name><name>B</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name>te</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
        <while>while<condition>(<expr><name>a</name><operator>/</operator><literal type="number">2</literal><operator>&gt;=</operator><literal type="number">1</literal></expr>)</condition>
        <block>{
            <expr_stmt><expr><name>te</name><operator>++</operator></expr>;</expr_stmt>
            <if>if<condition>(<expr><name>a</name><operator>%</operator><literal type="number">2</literal><operator>==</operator><literal type="number">1</literal></expr>)</condition><then>
            <block>{
                <decl_stmt><decl><type><name>int</name></type> <name>x</name><init>=<expr><name>te</name></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name>int</name></type> <name>p</name><init>=<expr><name>a</name><operator>/</operator><literal type="number">2</literal></expr></init></decl>;</decl_stmt>
                <while>while<condition>(<expr><literal type="number">2</literal><operator>*</operator><name>p</name><operator>&lt;=</operator><name>ma</name></expr>)</condition>
                <block>{
                    <expr_stmt><expr><name>x</name><operator>++</operator></expr>;</expr_stmt>
                    <expr_stmt><expr><name>p</name><operator>*=</operator><literal type="number">2</literal></expr>;</expr_stmt>
                    <expr_stmt><expr><name><name>A</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>p</name></expr>]</index></name><operator>++</operator></expr>;</expr_stmt>
                    <expr_stmt><expr><name><name>A</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>p</name></expr>]</index></name><operator>+=</operator><name>x</name></expr>;</expr_stmt>
                }</block></while>
            }</block></then></if>
            <expr_stmt><expr><name>a</name><operator>/=</operator><literal type="number">2</literal></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>A</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>a</name></expr>]</index></name><operator>++</operator></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>A</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>a</name></expr>]</index></name><operator>+=</operator><name>te</name></expr>;</expr_stmt>
        }</block></while>
    }</block></for>
    <comment type="line">//printf("here");</comment>
    <expr_stmt><expr><name>ans</name><operator>=</operator><name><name>A</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
    <for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">2</literal></expr>;</init> <condition><expr><name>i</name><operator>&lt;=</operator><name>ma</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
    <block>{
        <if>if<condition>(<expr><name><name>A</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><name>n</name></expr>)</condition><then>
        <block>{
            <expr_stmt><expr><name>ans</name><operator>=</operator><call><name>min</name><argument_list>(<argument><expr><name><name>A</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr></argument>,<argument><expr><name>ans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
    }</block></for>
    <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%I64d"</literal></expr></argument>,<argument><expr><name>ans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
