<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="cpp/12056006.cpp"><comment type="line">//Language: GNU C++</comment>


<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<typedef>typedef <type><name>long</name> <name>long</name></type> <name>ll</name>;</typedef>

<decl_stmt><decl><type><name>int</name></type> <name><name>a</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">1000007</literal></expr>]</index></name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{

    <decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt><decl_stmt><decl><type><name>int</name></type> <name>maxi</name><init>=<expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>x</name></decl>,<decl><type ref="prev"/><name>l</name><init>=<expr><operator>-</operator><literal type="number">999</literal></expr></init></decl>,<decl><type ref="prev"/><name>r</name><init>=<expr><literal type="number">999999</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name></expr>;</expr_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>x</name></expr>;</expr_stmt>
    <if>if<condition>(<expr><name><name>a</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><name>x</name></expr>]</index></name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then>
    <block>{<expr_stmt><expr><name><name>a</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>x</name></expr>]</index></name><operator>=</operator><name>i</name></expr>;</expr_stmt>
    }</block></then></if>
    <expr_stmt><expr><name><name>a</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><name>x</name></expr>]</index></name><operator>++</operator></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>a</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>x</name></expr>]</index></name><operator>=</operator><name>i</name></expr>;</expr_stmt>
    }</block></for>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><literal type="number">1000005</literal></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
    <block>{
        <if>if<condition>(<expr><name><name>a</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name><operator>&gt;</operator><name>maxi</name> <operator>||</operator> <operator>(</operator><operator>(</operator><name><name>a</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><name>maxi</name><operator>)</operator> <operator>&amp;&amp;</operator> <operator>(</operator><name>r</name><operator>-</operator><name>l</name><operator>)</operator><operator>&gt;</operator><operator>(</operator><name><name>a</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name><operator>-</operator><name><name>a</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name><operator>)</operator><operator>)</operator></expr>)</condition><then>
        <block>{<expr_stmt><expr><name>maxi</name><operator>=</operator><name><name>a</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name>l</name><operator>=</operator><name><name>a</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name>r</name><operator>=</operator><name><name>a</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>}</block></then></if>
       <comment type="line">// cout&lt;&lt;a[2][i]&lt;&lt;" "&lt;&lt;a[0][i]&lt;&lt;" "&lt;&lt;a[1][i]&lt;&lt;endl;</comment>


    }</block></for><comment type="line">//cout&lt;&lt;endl;</comment>
    <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>l</name><operator>+</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><literal type="string">" "</literal><operator>&lt;&lt;</operator><name>r</name><operator>+</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>

</unit>
